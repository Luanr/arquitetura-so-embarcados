

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri May 31 00:16:45 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           ; Version 2.05
    41                           ; Generated 20/12/2018 GMT
    42                           ; 
    43                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4520 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75 ;;_display	offset=-2 (param)
    76 ;;_number	offset=-4 (param)
    77 ;;_p	offset=-2 (param)
    78 ;;_s	offset=-4 (param)
    79 ;;_s	offset=-2 (param)
    80 ;;_valor	offset=-4 (param)
    81 ;;_pHeap	offset	0
    82 ;;_temp	offset	2
    83 ;;_segHeader	offset	4
    84 ;;_segLen	offset	5
    85 ;;_nBytes	offset=-1 (param)
    86 ;;_pSegB	offset	0
    87 ;;_uSegB	offset	2
    88 ;;_uSegA	offset	3
    89 ;;_uSum	offset	4
    90 ;;_pSegA	offset=-2 (param)
    91 ;;_new_task	offset	0
    92 ;;_prior	offset=-2 (param)
    93 ;;_f	offset=-4 (param)
    94 ;;_count	offset	0
    95 ;;_pHeap	offset	2
    96 ;;_state	offset=-1 (param)
    97 ;;_i	offset	0
    98 ;;_maior_index	offset	2
    99 ;;_p	offset=-2 (param)
   100 ;;_data	offset=-4 (param)
   101 ;;_time	offset=-2 (param)
   102 ;;_state	offset=-1 (param)
   103 ;;_i	offset	0
   104 ;;_maior_index	offset	2
   105 ;;_dado	offset	0
   106 ;;_p	offset=-2 (param)
   107 ;;_data	offset=-4 (param)
   108 ;;_i	offset	0
   109 ;;_state	offset=-1 (param)
   110 ;;_i	offset	0
   111 ;;_maior_index	offset	2
   112  0000                     _TOS	set	4093
   113  0000                     _PORTA	set	3968
   114  0000                     _TRISA	set	3986
   115  0000                     _PORTBbits	set	3969
   116  0000                     _TRISB	set	3987
   117  0000                     _STKPTR	set	4092
   118  0000                     _TOSL	set	4093
   119  0000                     _TOSH	set	4094
   120  0000                     _TOSU	set	4095
   121  0000                     _BSR	set	4064
   122  0000                     _STATUS	set	4056
   123  0000                     _WREG	set	4072
   124  0000                     _PORTDbits	set	3971
   125  0000                     _TMR0L	set	4054
   126  0000                     _T0CONbits	set	4053
   127  0000                     _INTCON2bits	set	4081
   128  0000                     _INTCONbits	set	4082
   129  0000                     _TRISDbits	set	3989
   130                           
   131                           ; #config settings
   132  0000                     
   133                           	psect	cinit
   134  001122                     __pcinit:
   135                           	opt callstack 0
   136  001122                     start_initialization:
   137                           	opt callstack 0
   138  001122                     __initialization:
   139                           	opt callstack 0
   140                           
   141                           ; Clear objects allocated to BIGRAM (1056 bytes)
   142  001122  EE01  F0E0         	lfsr	0,__pbssBIGRAM
   143  001126  EE24 F020          	lfsr	2,1056
   144  00112A                     clear_0:
   145  00112A  6AEE               	clrf	postinc0,c
   146  00112C  50DD               	movf	postdec2,w,c
   147  00112E  50D9               	movf	fsr2l,w,c
   148  001130  E1FC               	bnz	clear_0
   149  001132  50DA               	movf	fsr2h,w,c
   150  001134  E1FA               	bnz	clear_0
   151                           
   152                           ; Clear objects allocated to COMRAM (30 bytes)
   153  001136  EE00  F021         	lfsr	0,__pbssCOMRAM
   154  00113A  0E1E               	movlw	30
   155  00113C                     clear_1:
   156  00113C  6AEE               	clrf	postinc0,c
   157  00113E  06E8               	decf	wreg,f,c
   158  001140  E1FD               	bnz	clear_1
   159  001142                     end_of_initialization:
   160                           	opt callstack 0
   161  001142                     __end_of__initialization:
   162                           	opt callstack 0
   163  001142  0100               	movlb	0
   164  001144  EF64  F007         	goto	_main	;jump to C main() function
   165                           
   166                           	psect	bssCOMRAM
   167  000021                     __pbssCOMRAM:
   168                           	opt callstack 0
   169  000021                     _size:
   170                           	opt callstack 0
   171  000021                     	ds	2
   172  000023                     _who:
   173                           	opt callstack 0
   174  000023                     	ds	2
   175  000025                     _s_pipe:
   176                           	opt callstack 0
   177  000025                     	ds	14
   178  000033                     _p:
   179                           	opt callstack 0
   180  000033                     	ds	12
   181                           
   182                           	psect	bssBIGRAM
   183  0001E0                     __pbssBIGRAM:
   184                           	opt callstack 0
   185  0001E0                     _ready_queue:
   186                           	opt callstack 0
   187  0001E0                     	ds	544
   188  000400                     __uDynamicHeap:
   189                           	opt callstack 0
   190  000400                     	ds	512
   191                           
   192                           	psect	cstackCOMRAM
   193  00003F                     __pcstackCOMRAM:
   194                           	opt callstack 0
   195  00003F                     ??_ISR_timer0:
   196                           
   197                           ; 1 bytes @ 0x0
   198  00003F                     	ds	17
   199                           
   200 ;;
   201 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   202 ;;
   203 ;; *************** function _main *****************
   204 ;; Defined at:
   205 ;;		line 17 in file "main.c"
   206 ;; Parameters:    Size  Location     Type
   207 ;;		None
   208 ;; Auto vars:     Size  Location     Type
   209 ;;		None
   210 ;; Return value:  Size  Location     Type
   211 ;;                  1  [STACK] void 
   212 ;; Registers used:
   213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
   214 ;; Tracked objects:
   215 ;;		On entry : 0/0
   216 ;;		On exit  : 0/0
   217 ;;		Unchanged: 0/0
   218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   219 ;;      Params:         0       0       0       0       0       0       0
   220 ;;      Locals:         0       0       0       0       0       0       0
   221 ;;      Temps:          0       0       0       0       0       0       0
   222 ;;      Totals:         0       0       0       0       0       0       0
   223 ;;Total ram usage:        0 bytes
   224 ;; Hardware stack levels required when called:   13
   225 ;; This function calls:
   226 ;;		_config_INT0
   227 ;;		_config_timer0
   228 ;;		_dispatcher
   229 ;;		_lunos_createTask
   230 ;;		_lunos_init
   231 ;;		_seven_seg_init
   232 ;;		_seven_seg_set
   233 ;;		_user_conf
   234 ;; This function is called by:
   235 ;;		Startup code after reset
   236 ;; This function uses a reentrant model
   237 ;;
   238                           
   239                           	psect	text0
   240  000EC8                     __ptext0:
   241                           	opt callstack 0
   242  000EC8                     _main:
   243                           	opt callstack 18
   244                           
   245                           ;main.c: 19: 
   246                           
   247                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   248                           ;incstack = 0
   249  000EC8  EC63  F008         	call	_lunos_init	;wreg free
   250                           
   251                           ;main.c: 21: 
   252  000ECC  EC46  F008         	call	_user_conf	;wreg free
   253                           
   254                           ;main.c: 22:   return;
   255  000ED0  ECAD  F008         	call	_config_INT0	;wreg free
   256                           
   257                           ;main.c: 23: }
   258  000ED4  ECA4  F008         	call	_config_timer0	;wreg free
   259  000ED8  ECBC  F008         	call	_seven_seg_init	;wreg free
   260  000EDC  0E05               	movlw	5
   261  000EDE  6EE6               	movwf	postinc1,c
   262  000EE0  0E00               	movlw	0
   263  000EE2  6EE6               	movwf	postinc1,c
   264  000EE4  0E01               	movlw	1
   265  000EE6  6EE6               	movwf	postinc1,c
   266  000EE8  0E00               	movlw	0
   267  000EEA  6EE6               	movwf	postinc1,c
   268  000EEC  ECD2  F007         	call	_seven_seg_set	;wreg free
   269  000EF0  0E4C               	movlw	low _task_0
   270  000EF2  6EE6               	movwf	postinc1,c
   271  000EF4  0E10               	movlw	high _task_0
   272  000EF6  6EE6               	movwf	postinc1,c
   273  000EF8  0E03               	movlw	3
   274  000EFA  6EE6               	movwf	postinc1,c
   275  000EFC  0E00               	movlw	0
   276  000EFE  6EE6               	movwf	postinc1,c
   277  000F00  EC60  F005         	call	_lunos_createTask	;wreg free
   278  000F04  0E36               	movlw	low _task_1
   279  000F06  6EE6               	movwf	postinc1,c
   280  000F08  0E0F               	movlw	high _task_1
   281  000F0A  6EE6               	movwf	postinc1,c
   282  000F0C  0E04               	movlw	4
   283  000F0E  6EE6               	movwf	postinc1,c
   284  000F10  0E00               	movlw	0
   285  000F12  6EE6               	movwf	postinc1,c
   286  000F14  EC60  F005         	call	_lunos_createTask	;wreg free
   287  000F18  0EF8               	movlw	low _task_2
   288  000F1A  6EE6               	movwf	postinc1,c
   289  000F1C  0E10               	movlw	high _task_2
   290  000F1E  6EE6               	movwf	postinc1,c
   291  000F20  0E05               	movlw	5
   292  000F22  6EE6               	movwf	postinc1,c
   293  000F24  0E00               	movlw	0
   294  000F26  6EE6               	movwf	postinc1,c
   295  000F28  EC60  F005         	call	_lunos_createTask	;wreg free
   296  000F2C  0E00               	movlw	0
   297  000F2E  6EE6               	movwf	postinc1,c
   298  000F30  EC0A  F000         	call	_dispatcher	;wreg free
   299  000F34                     l157:
   300  000F34  D7FF               	goto	l157
   301  000F36                     __end_of_main:
   302                           	opt callstack 0
   303                           
   304 ;; *************** function _user_conf *****************
   305 ;; Defined at:
   306 ;;		line 31 in file "tasks.c"
   307 ;; Parameters:    Size  Location     Type
   308 ;;		None
   309 ;; Auto vars:     Size  Location     Type
   310 ;;		None
   311 ;; Return value:  Size  Location     Type
   312 ;;                  1  [STACK] void 
   313 ;; Registers used:
   314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
   315 ;; Tracked objects:
   316 ;;		On entry : 0/0
   317 ;;		On exit  : 0/0
   318 ;;		Unchanged: 0/0
   319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   320 ;;      Params:         0       0       0       0       0       0       0
   321 ;;      Locals:         0       0       0       0       0       0       0
   322 ;;      Temps:          0       0       0       0       0       0       0
   323 ;;      Totals:         0       0       0       0       0       0       0
   324 ;;Total ram usage:        0 bytes
   325 ;; Hardware stack levels used:    1
   326 ;; Hardware stack levels required when called:   12
   327 ;; This function calls:
   328 ;;		_SRAMalloc
   329 ;;		_pipe_create
   330 ;;		_seven_seg_init
   331 ;;		_seven_seg_set
   332 ;; This function is called by:
   333 ;;		_main
   334 ;; This function uses a reentrant model
   335 ;;
   336                           
   337                           	psect	text1
   338  00108C                     __ptext1:
   339                           	opt callstack 0
   340  00108C                     _user_conf:
   341                           	opt callstack 18
   342                           
   343                           ;tasks.c: 32:   TRISB = 0b00000001;
   344                           
   345                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   346                           ;incstack = 0
   347  00108C  0E01               	movlw	1
   348  00108E  6E93               	movwf	3987,c	;volatile
   349                           
   350                           ;tasks.c: 33:   pipe_create(&p, &s_pipe);
   351  001090  0E25               	movlw	low _s_pipe
   352  001092  6EE6               	movwf	postinc1,c
   353  001094  0E00               	movlw	high _s_pipe
   354  001096  6EE6               	movwf	postinc1,c
   355  001098  0E33               	movlw	low _p
   356  00109A  6EE6               	movwf	postinc1,c
   357  00109C  0E00               	movlw	high _p
   358  00109E  6EE6               	movwf	postinc1,c
   359  0010A0  EC15  F007         	call	_pipe_create	;wreg free
   360                           
   361                           ;tasks.c: 34:   mem = SRAMalloc(5);
   362  0010A4  0E05               	movlw	5
   363  0010A6  6EE6               	movwf	postinc1,c
   364  0010A8  EC50  F002         	call	_SRAMalloc	;wreg free
   365                           
   366                           ;tasks.c: 35:   seven_seg_init();
   367  0010AC  ECBC  F008         	call	_seven_seg_init	;wreg free
   368                           
   369                           ;tasks.c: 36:   seven_seg_set(1, 5);
   370  0010B0  0E05               	movlw	5
   371  0010B2  6EE6               	movwf	postinc1,c
   372  0010B4  0E00               	movlw	0
   373  0010B6  6EE6               	movwf	postinc1,c
   374  0010B8  0E01               	movlw	1
   375  0010BA  6EE6               	movwf	postinc1,c
   376  0010BC  0E00               	movlw	0
   377  0010BE  6EE6               	movwf	postinc1,c
   378  0010C0  ECD2  F007         	call	_seven_seg_set	;wreg free
   379                           
   380                           ; _user_conf: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
   381  0010C4  0012               	return		;funcret
   382  0010C6                     __end_of_user_conf:
   383                           	opt callstack 0
   384                           
   385 ;; *************** function _seven_seg_set *****************
   386 ;; Defined at:
   387 ;;		line 15 in file "seven_seg.c"
   388 ;; Parameters:    Size  Location     Type
   389 ;;  display         2  [STACK] int 
   390 ;;  number          2  [STACK] int 
   391 ;; Auto vars:     Size  Location     Type
   392 ;;		None
   393 ;; Return value:  Size  Location     Type
   394 ;;                  1  [STACK] void 
   395 ;; Registers used:
   396 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+11
   397 ;; Tracked objects:
   398 ;;		On entry : 0/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   402 ;;      Params:         0       0       0       0       0       0       0
   403 ;;      Locals:         0       0       0       0       0       0       0
   404 ;;      Temps:          0       0       0       0       0       0       0
   405 ;;      Totals:         0       0       0       0       0       0       0
   406 ;;Total ram usage:        0 bytes
   407 ;; Hardware stack levels used:    1
   408 ;; Hardware stack levels required when called:   10
   409 ;; This function calls:
   410 ;;		Nothing
   411 ;; This function is called by:
   412 ;;		_main
   413 ;;		_user_conf
   414 ;; This function uses a reentrant model
   415 ;;
   416                           
   417                           	psect	text2
   418  000FA4                     __ptext2:
   419                           	opt callstack 0
   420  000FA4                     _seven_seg_set:
   421                           	opt callstack 19
   422                           
   423                           ;seven_seg.c: 17:     if(display == 1) {
   424                           ;stkvar	_display @ sp[(0)+-2]
   425                           
   426                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   427                           ;incstack = 0
   428  000FA4  0EFE               	movlw	-2
   429  000FA6  04E3               	decf	plusw1,w,c
   430  000FA8  E10C               	bnz	l1148
   431  000FAA  0EFF               	movlw	-1
   432  000FAC  50E3               	movf	plusw1,w,c
   433  000FAE  A4D8               	btfss	status,2,c
   434  000FB0  D008               	goto	l1148
   435                           
   436                           ;seven_seg.c: 18:         PORTA = PORTA & 0b11111000;
   437  000FB2  0EF8               	movlw	248
   438  000FB4  1680               	andwf	3968,f,c	;volatile
   439                           
   440                           ;seven_seg.c: 19:         PORTA = PORTA | number;
   441                           ;stkvar	_number @ sp[(0)+-4]
   442  000FB6  0EFC               	movlw	-4
   443  000FB8  CFE3 F00C          	movff	plusw1,btemp+11
   444  000FBC  5080               	movf	3968,w,c	;volatile
   445  000FBE  100C               	iorwf	btemp+11,w,c
   446  000FC0  D016               	goto	L1
   447  000FC2                     l1148:
   448                           
   449                           ;stkvar	_display @ sp[(0)+-2]
   450  000FC2  0EFE               	movlw	-2
   451  000FC4  CFE3 F001          	movff	plusw1,btemp
   452  000FC8  0E02               	movlw	2
   453  000FCA  1801               	xorwf	btemp,w,c
   454  000FCC  E111               	bnz	l316
   455  000FCE  0EFF               	movlw	-1
   456  000FD0  50E3               	movf	plusw1,w,c
   457  000FD2  A4D8               	btfss	status,2,c
   458  000FD4  D00D               	goto	l316
   459                           
   460                           ;seven_seg.c: 21:         PORTA = PORTA & 0b11000111;
   461  000FD6  0EC7               	movlw	199
   462  000FD8  1680               	andwf	3968,f,c	;volatile
   463                           
   464                           ;seven_seg.c: 22:         PORTA = PORTA | number << 3;
   465                           ;stkvar	_number @ sp[(0)+-4]
   466  000FDA  0EFC               	movlw	-4
   467  000FDC  CFE3 F00C          	movff	plusw1,btemp+11
   468  000FE0  90D8               	bcf	status,0,c
   469  000FE2  360C               	rlcf	btemp+11,f,c
   470  000FE4  90D8               	bcf	status,0,c
   471  000FE6  360C               	rlcf	btemp+11,f,c
   472  000FE8  90D8               	bcf	status,0,c
   473  000FEA  340C               	rlcf	btemp+11,w,c
   474  000FEC  1080               	iorwf	3968,w,c	;volatile
   475  000FEE                     L1:
   476  000FEE  6E80               	movwf	3968,c	;volatile
   477  000FF0                     l316:
   478                           
   479                           ; _seven_seg_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
   480  000FF0  52E5               	movf	postdec1,f,c
   481  000FF2  52E5               	movf	postdec1,f,c
   482  000FF4  52E5               	movf	postdec1,f,c
   483  000FF6  52E5               	movf	postdec1,f,c
   484  000FF8  0012               	return		;funcret
   485  000FFA                     __end_of_seven_seg_set:
   486                           	opt callstack 0
   487                           
   488 ;; *************** function _seven_seg_init *****************
   489 ;; Defined at:
   490 ;;		line 9 in file "seven_seg.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;		None
   493 ;; Auto vars:     Size  Location     Type
   494 ;;		None
   495 ;; Return value:  Size  Location     Type
   496 ;;                  1  [STACK] void 
   497 ;; Registers used:
   498 ;;		wreg, status,2
   499 ;; Tracked objects:
   500 ;;		On entry : 0/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   504 ;;      Params:         0       0       0       0       0       0       0
   505 ;;      Locals:         0       0       0       0       0       0       0
   506 ;;      Temps:          0       0       0       0       0       0       0
   507 ;;      Totals:         0       0       0       0       0       0       0
   508 ;;Total ram usage:        0 bytes
   509 ;; Hardware stack levels used:    1
   510 ;; Hardware stack levels required when called:   10
   511 ;; This function calls:
   512 ;;		Nothing
   513 ;; This function is called by:
   514 ;;		_main
   515 ;;		_user_conf
   516 ;; This function uses a reentrant model
   517 ;;
   518                           
   519                           	psect	text3
   520  001178                     __ptext3:
   521                           	opt callstack 0
   522  001178                     _seven_seg_init:
   523                           	opt callstack 19
   524                           
   525                           ;seven_seg.c: 11:     TRISA = 0b11000000;
   526                           
   527                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   528                           ;incstack = 0
   529  001178  0EC0               	movlw	192
   530  00117A  6E92               	movwf	3986,c	;volatile
   531                           
   532                           ;seven_seg.c: 12:     PORTA = 0b00000000;
   533  00117C  6A80               	clrf	3968,c	;volatile
   534                           
   535                           ; _seven_seg_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
   536  00117E  0012               	return		;funcret
   537  001180                     __end_of_seven_seg_init:
   538                           	opt callstack 0
   539                           
   540 ;; *************** function _pipe_create *****************
   541 ;; Defined at:
   542 ;;		line 9 in file "pipe.c"
   543 ;; Parameters:    Size  Location     Type
   544 ;;  p               2  [STACK] PTR struct pipe
   545 ;;		 -> p(12), 
   546 ;;  s               2  [STACK] PTR struct semaphore
   547 ;;		 -> s_pipe(14), 
   548 ;; Auto vars:     Size  Location     Type
   549 ;;		None
   550 ;; Return value:  Size  Location     Type
   551 ;;                  1  [STACK] void 
   552 ;; Registers used:
   553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   554 ;; Tracked objects:
   555 ;;		On entry : 0/0
   556 ;;		On exit  : 0/0
   557 ;;		Unchanged: 0/0
   558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   559 ;;      Params:         0       0       0       0       0       0       0
   560 ;;      Locals:         0       0       0       0       0       0       0
   561 ;;      Temps:          0       0       0       0       0       0       0
   562 ;;      Totals:         0       0       0       0       0       0       0
   563 ;;Total ram usage:        0 bytes
   564 ;; Hardware stack levels used:    1
   565 ;; Hardware stack levels required when called:   11
   566 ;; This function calls:
   567 ;;		_sem_init
   568 ;; This function is called by:
   569 ;;		_user_conf
   570 ;; This function uses a reentrant model
   571 ;;
   572                           
   573                           	psect	text4
   574  000E2A                     __ptext4:
   575                           	opt callstack 0
   576  000E2A                     _pipe_create:
   577                           	opt callstack 18
   578                           
   579                           ;pipe.c: 10:   p->index_write = 0;
   580                           ;stkvar	_p @ sp[(0)+-2]
   581                           
   582                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   583                           ;incstack = 0
   584  000E2A  0EFE               	movlw	-2
   585  000E2C  CFE3 F00B          	movff	plusw1,btemp+10
   586  000E30  0EFF               	movlw	-1
   587  000E32  CFE3 F00C          	movff	plusw1,btemp+11
   588  000E36  0E04               	movlw	4
   589  000E38  240B               	addwf	btemp+10,w,c
   590  000E3A  6ED9               	movwf	fsr2l,c
   591  000E3C  0E00               	movlw	0
   592  000E3E  200C               	addwfc	btemp+11,w,c
   593  000E40  6EDA               	movwf	fsr2h,c
   594  000E42  0E00               	movlw	0
   595  000E44  6EDE               	movwf	postinc2,c
   596  000E46  0E00               	movlw	0
   597  000E48  6EDD               	movwf	postdec2,c
   598                           
   599                           ;pipe.c: 11:   p->index_read = 0;
   600                           ;stkvar	_p @ sp[(0)+-2]
   601  000E4A  0EFE               	movlw	-2
   602  000E4C  CFE3 F00B          	movff	plusw1,btemp+10
   603  000E50  0EFF               	movlw	-1
   604  000E52  CFE3 F00C          	movff	plusw1,btemp+11
   605  000E56  0E06               	movlw	6
   606  000E58  240B               	addwf	btemp+10,w,c
   607  000E5A  6ED9               	movwf	fsr2l,c
   608  000E5C  0E00               	movlw	0
   609  000E5E  200C               	addwfc	btemp+11,w,c
   610  000E60  6EDA               	movwf	fsr2h,c
   611  000E62  0E00               	movlw	0
   612  000E64  6EDE               	movwf	postinc2,c
   613  000E66  0E00               	movlw	0
   614  000E68  6EDD               	movwf	postdec2,c
   615                           
   616                           ;pipe.c: 12:   p->p_size = 0;
   617                           ;stkvar	_p @ sp[(0)+-2]
   618  000E6A  0EFE               	movlw	-2
   619  000E6C  CFE3 F00B          	movff	plusw1,btemp+10
   620  000E70  0EFF               	movlw	-1
   621  000E72  CFE3 F00C          	movff	plusw1,btemp+11
   622  000E76  0E08               	movlw	8
   623  000E78  240B               	addwf	btemp+10,w,c
   624  000E7A  6ED9               	movwf	fsr2l,c
   625  000E7C  0E00               	movlw	0
   626  000E7E  200C               	addwfc	btemp+11,w,c
   627  000E80  6EDA               	movwf	fsr2h,c
   628  000E82  0E00               	movlw	0
   629  000E84  6EDE               	movwf	postinc2,c
   630  000E86  0E00               	movlw	0
   631  000E88  6EDD               	movwf	postdec2,c
   632                           
   633                           ;pipe.c: 13:   sem_init(p->s, 0);
   634  000E8A  0E00               	movlw	0
   635  000E8C  6EE6               	movwf	postinc1,c
   636  000E8E  0E00               	movlw	0
   637  000E90  6EE6               	movwf	postinc1,c
   638                           
   639                           ;stkvar	_p @ sp[(-2)+-2]
   640  000E92  0EFC               	movlw	-4
   641  000E94  CFE3 F00B          	movff	plusw1,btemp+10
   642  000E98  0EFD               	movlw	-3
   643  000E9A  CFE3 F00C          	movff	plusw1,btemp+11
   644  000E9E  0E0A               	movlw	10
   645  000EA0  240B               	addwf	btemp+10,w,c
   646  000EA2  6ED9               	movwf	fsr2l,c
   647  000EA4  0E00               	movlw	0
   648  000EA6  200C               	addwfc	btemp+11,w,c
   649  000EA8  6EDA               	movwf	fsr2h,c
   650  000EAA  CFDE F00B          	movff	postinc2,btemp+10
   651  000EAE  CFDD F00C          	movff	postdec2,btemp+11
   652  000EB2  C00B  FFE6         	movff	btemp+10,postinc1
   653  000EB6  C00C  FFE6         	movff	btemp+11,postinc1
   654  000EBA  ECB5  F008         	call	_sem_init	;wreg free
   655                           
   656                           ; _pipe_create: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, a
      +                          rgsize = 4, vargsize = 0
   657  000EBE  52E5               	movf	postdec1,f,c
   658  000EC0  52E5               	movf	postdec1,f,c
   659  000EC2  52E5               	movf	postdec1,f,c
   660  000EC4  52E5               	movf	postdec1,f,c
   661  000EC6  0012               	return		;funcret
   662  000EC8                     __end_of_pipe_create:
   663                           	opt callstack 0
   664                           
   665 ;; *************** function _sem_init *****************
   666 ;; Defined at:
   667 ;;		line 10 in file "semaphore.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;  s               2  [STACK] PTR struct semaphore
   670 ;;  valor           2  [STACK] int 
   671 ;; Auto vars:     Size  Location     Type
   672 ;;		None
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1  [STACK] void 
   675 ;; Registers used:
   676 ;;		None
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   682 ;;      Params:         0       0       0       0       0       0       0
   683 ;;      Locals:         0       0       0       0       0       0       0
   684 ;;      Temps:          0       0       0       0       0       0       0
   685 ;;      Totals:         0       0       0       0       0       0       0
   686 ;;Total ram usage:        0 bytes
   687 ;; Hardware stack levels used:    1
   688 ;; Hardware stack levels required when called:   10
   689 ;; This function calls:
   690 ;;		Nothing
   691 ;; This function is called by:
   692 ;;		_pipe_create
   693 ;; This function uses a reentrant model
   694 ;;
   695                           
   696                           	psect	text5
   697  00116A                     __ptext5:
   698                           	opt callstack 0
   699  00116A                     _sem_init:
   700                           	opt callstack 18
   701                           
   702                           ;semaphore.c: 15:   s->task_to_ready = 0;
   703                           
   704                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   705                           ;incstack = 0
   706  00116A  9EF2               	bcf	4082,7,c	;volatile
   707                           
   708                           ;semaphore.c: 17:   INTCONbits.GIE = 1;
   709  00116C  8EF2               	bsf	4082,7,c	;volatile
   710                           
   711                           ; _sem_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
   712  00116E  52E5               	movf	postdec1,f,c
   713  001170  52E5               	movf	postdec1,f,c
   714  001172  52E5               	movf	postdec1,f,c
   715  001174  52E5               	movf	postdec1,f,c
   716  001176  0012               	return		;funcret
   717  001178                     __end_of_sem_init:
   718                           	opt callstack 0
   719                           
   720 ;; *************** function _SRAMalloc *****************
   721 ;; Defined at:
   722 ;;		line 191 in file "sralloc.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  nBytes          1  [STACK] unsigned char 
   725 ;; Auto vars:     Size  Location     Type
   726 ;;  pHeap           2  [STACK] PTR struct _SALLOC
   727 ;;		 -> _uDynamicHeap(512), 
   728 ;;  temp            2  [STACK] PTR struct _SALLOC
   729 ;;		 -> _uDynamicHeap(512), 
   730 ;;  segHeader       1  [STACK] struct _SALLOC
   731 ;;  segLen          1  [STACK] unsigned char 
   732 ;; Return value:  Size  Location     Type
   733 ;;                  2  [STACK] PTR unsigned char 
   734 ;; Registers used:
   735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   741 ;;      Params:         0       0       0       0       0       0       0
   742 ;;      Locals:         0       0       0       0       0       0       0
   743 ;;      Temps:          0       0       0       0       0       0       0
   744 ;;      Totals:         0       0       0       0       0       0       0
   745 ;;Total ram usage:        0 bytes
   746 ;; Hardware stack levels used:    1
   747 ;; Hardware stack levels required when called:   11
   748 ;; This function calls:
   749 ;;		__SRAMmerge
   750 ;; This function is called by:
   751 ;;		_user_conf
   752 ;; This function uses a reentrant model
   753 ;;
   754                           
   755                           	psect	text6
   756  0004A0                     __ptext6:
   757                           	opt callstack 0
   758  0004A0                     _SRAMalloc:
   759                           	opt callstack 0
   760                           
   761                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   762  0004A0  0E06               	movlw	6
   763  0004A2  26E1               	addwf	fsr1l,f,c
   764  0004A4  0E00               	movlw	0
   765  0004A6  22E2               	addwfc	fsr1h,f,c
   766                           
   767                           ;sralloc.c: 191: unsigned char * SRAMalloc( unsigned char nBytes);sralloc.c: 192: {;sral
      +                          loc.c: 193:  SALLOC * pHeap;;sralloc.c: 194:  SALLOC * temp;;sralloc.c: 195:       SALLO
      +                          C segHeader;;sralloc.c: 196:       unsigned char segLen;;sralloc.c: 199:  if (nBytes > (
      +                          0x7F - 1)) return (0);
   768                           ;stkvar	_nBytes @ sp[(-6)+-1]
   769                           
   770                           ;incstack = 0
   771  0004A8  0EF9               	movlw	-7
   772  0004AA  CFE3 F001          	movff	plusw1,btemp
   773  0004AE  0E7E               	movlw	126
   774  0004B0  6401               	cpfsgt	btemp,c
   775  0004B2  D005               	goto	l1162
   776  0004B4                     u160:
   777  0004B4  0E00               	movlw	0
   778  0004B6  6E01               	movwf	btemp,c
   779  0004B8  0E00               	movlw	0
   780  0004BA  6E02               	movwf	btemp+1,c
   781  0004BC  D0BB               	goto	l265
   782  0004BE                     l1162:
   783                           
   784                           ;sralloc.c: 202:  pHeap = (SALLOC *)_uDynamicHeap;
   785                           ;stkvar	_pHeap @ sp[(-6)+0]
   786  0004BE  0E04               	movlw	high __uDynamicHeap
   787  0004C0  6E01               	movwf	btemp,c
   788  0004C2  0EFB               	movlw	-5
   789  0004C4  C001  FFE3         	movff	btemp,plusw1
   790  0004C8  0E00               	movlw	low __uDynamicHeap
   791  0004CA  6E01               	movwf	btemp,c
   792  0004CC  0EFA               	movlw	-6
   793  0004CE  C001  FFE3         	movff	btemp,plusw1
   794  0004D2                     l1164:
   795                           
   796                           ;sralloc.c: 205:  {;sralloc.c: 207:   segHeader = *pHeap;
   797                           ;stkvar	_pHeap @ sp[(-6)+0]
   798  0004D2  0EFA               	movlw	-6
   799  0004D4  CFE3 FFD9          	movff	plusw1,fsr2l
   800  0004D8  0EFB               	movlw	-5
   801  0004DA  CFE3 FFDA          	movff	plusw1,fsr2h
   802  0004DE  50DF               	movf	indf2,w,c
   803  0004E0  6E0C               	movwf	btemp+11,c
   804                           
   805                           ;stkvar	_segHeader @ sp[(-6)+4]
   806  0004E2  0EFE               	movlw	-2
   807  0004E4  C00C  FFE3         	movff	btemp+11,plusw1
   808                           
   809                           ;sralloc.c: 210:   segLen = segHeader.bits.count - 1;
   810                           ;stkvar	_segHeader @ sp[(-6)+4]
   811  0004E8  50E1               	movf	fsr1l,w,c
   812  0004EA  0FFE               	addlw	-2
   813  0004EC  6ED9               	movwf	fsr2l,c
   814  0004EE  50E2               	movf	fsr1h,w,c
   815  0004F0  6EDA               	movwf	fsr2h,c
   816  0004F2  0EFF               	movlw	255
   817  0004F4  22DA               	addwfc	fsr2h,f,c
   818  0004F6  50DF               	movf	223,w,c
   819  0004F8  0B7F               	andlw	127
   820  0004FA  6E0C               	movwf	btemp+11,c
   821  0004FC  0EFF               	movlw	255
   822  0004FE  260C               	addwf	btemp+11,f,c
   823                           
   824                           ;stkvar	_segLen @ sp[(-6)+5]
   825  000500  0EFF               	movlw	-1
   826  000502  C00C  FFE3         	movff	btemp+11,plusw1
   827                           
   828                           ;sralloc.c: 213:   if (segHeader.byte == 0) return (0);
   829                           ;stkvar	_segHeader @ sp[(-6)+4]
   830  000506  0EFE               	movlw	-2
   831  000508  50E3               	movf	plusw1,w,c
   832  00050A  B4D8               	btfsc	status,2,c
   833  00050C  D7D3               	goto	u160
   834                           
   835                           ;sralloc.c: 216:   if (!(segHeader.bits.alloc))
   836                           ;stkvar	_segHeader @ sp[(-6)+4]
   837  00050E  50E1               	movf	fsr1l,w,c
   838  000510  0FFE               	addlw	-2
   839  000512  6ED9               	movwf	fsr2l,c
   840  000514  50E2               	movf	fsr1h,w,c
   841  000516  6EDA               	movwf	fsr2h,c
   842  000518  0EFF               	movlw	255
   843  00051A  22DA               	addwfc	fsr2h,f,c
   844  00051C  BEDF               	btfsc	indf2,7,c
   845  00051E  D016               	goto	u200
   846                           
   847                           ;sralloc.c: 217:   {;sralloc.c: 219:    if (nBytes > segLen)
   848                           ;stkvar	_nBytes @ sp[(-6)+-1]
   849                           ;stkvar	_segLen @ sp[(-6)+5]
   850  000520  50E1               	movf	fsr1l,w,c
   851  000522  0FFF               	addlw	-1
   852  000524  6ED9               	movwf	fsr2l,c
   853  000526  50E2               	movf	fsr1h,w,c
   854  000528  6EDA               	movwf	fsr2h,c
   855  00052A  0EFF               	movlw	255
   856  00052C  22DA               	addwfc	fsr2h,f,c
   857  00052E  0EF9               	movlw	-7
   858  000530  50E3               	movf	plusw1,w,c
   859  000532  5CDE               	subwf	postinc2,w,c
   860  000534  B0D8               	btfsc	status,0,c
   861  000536  D020               	goto	l1182
   862                           
   863                           ;sralloc.c: 220:    {;sralloc.c: 222:     if (!(_SRAMmerge(pHeap))) pHeap += segHeader.b
      +                          its.count;
   864                           ;stkvar	_pHeap @ sp[(-6)+0]
   865  000538  0EFA               	movlw	-6
   866  00053A  CFE3 FFE6          	movff	plusw1,postinc1
   867  00053E  CFE3 FFE6          	movff	plusw1,postinc1
   868  000542  EC1F  F003         	call	__SRAMmerge	;wreg free
   869  000546  5001               	movf	btemp,w,c
   870  000548  A4D8               	btfss	status,2,c
   871  00054A  D7C3               	goto	l1164
   872  00054C                     u200:
   873                           
   874                           ;stkvar	_segHeader @ sp[(-6)+4]
   875  00054C  50E1               	movf	fsr1l,w,c
   876  00054E  0FFE               	addlw	-2
   877  000550  6ED9               	movwf	fsr2l,c
   878  000552  50E2               	movf	fsr1h,w,c
   879  000554  6EDA               	movwf	fsr2h,c
   880  000556  0EFF               	movlw	255
   881  000558  22DA               	addwfc	fsr2h,f,c
   882  00055A  50DF               	movf	223,w,c
   883  00055C  0B7F               	andlw	127
   884  00055E  0D01               	mullw	1
   885                           
   886                           ;stkvar	_pHeap @ sp[(-6)+0]
   887  000560  50E1               	movf	fsr1l,w,c
   888  000562  0FFA               	addlw	-6
   889  000564  6ED9               	movwf	fsr2l,c
   890  000566  50E2               	movf	fsr1h,w,c
   891  000568  6EDA               	movwf	fsr2h,c
   892  00056A  0EFF               	movlw	255
   893  00056C  22DA               	addwfc	fsr2h,f,c
   894  00056E  50F3               	movf	prodl,w,c
   895  000570  26DE               	addwf	postinc2,f,c
   896  000572  50F4               	movf	prodh,w,c
   897  000574  22DD               	addwfc	postdec2,f,c
   898  000576  D7AD               	goto	l1164
   899  000578                     l1182:
   900                           
   901                           ;sralloc.c: 228:    if (nBytes == segLen)
   902                           ;stkvar	_segLen @ sp[(-6)+5]
   903                           ;stkvar	_nBytes @ sp[(-6)+-1]
   904  000578  50E1               	movf	fsr1l,w,c
   905  00057A  0FF9               	addlw	-7
   906  00057C  6ED9               	movwf	fsr2l,c
   907  00057E  50E2               	movf	fsr1h,w,c
   908  000580  6EDA               	movwf	fsr2h,c
   909  000582  0EFF               	movlw	255
   910  000584  22DA               	addwfc	fsr2h,f,c
   911  000586  0EFF               	movlw	-1
   912  000588  50E3               	movf	plusw1,w,c
   913  00058A  18DE               	xorwf	postinc2,w,c
   914  00058C  A4D8               	btfss	status,2,c
   915  00058E  D011               	goto	l1192
   916                           
   917                           ;sralloc.c: 229:    {;sralloc.c: 231:     (*pHeap).bits.alloc = 1;
   918                           ;stkvar	_pHeap @ sp[(-6)+0]
   919  000590  0EFA               	movlw	-6
   920  000592  CFE3 FFD9          	movff	plusw1,fsr2l
   921  000596  0EFB               	movlw	-5
   922  000598  CFE3 FFDA          	movff	plusw1,fsr2h
   923  00059C  8EDF               	bsf	indf2,7,c
   924                           
   925                           ;sralloc.c: 234:     return ((unsigned char *)(pHeap + 1));
   926                           ;stkvar	_pHeap @ sp[(-6)+0]
   927  00059E  0EFA               	movlw	-6
   928  0005A0  50E3               	movf	plusw1,w,c
   929  0005A2  0F01               	addlw	1
   930  0005A4  6E01               	movwf	btemp,c
   931  0005A6  0EFB               	movlw	-5
   932  0005A8  CFE3 F002          	movff	plusw1,btemp+1
   933  0005AC  0E00               	movlw	0
   934  0005AE  2202               	addwfc	btemp+1,f,c
   935  0005B0  D041               	goto	l265
   936  0005B2                     l1192:
   937                           
   938                           ;sralloc.c: 239:    {;sralloc.c: 241:     (*pHeap).byte = nBytes + 0x81;
   939                           ;stkvar	_pHeap @ sp[(-6)+0]
   940  0005B2  0EFA               	movlw	-6
   941  0005B4  CFE3 FFD9          	movff	plusw1,fsr2l
   942  0005B8  0EFB               	movlw	-5
   943  0005BA  CFE3 FFDA          	movff	plusw1,fsr2h
   944                           
   945                           ;stkvar	_nBytes @ sp[(-6)+-1]
   946  0005BE  0EF9               	movlw	-7
   947  0005C0  50E3               	movf	plusw1,w,c
   948  0005C2  0F81               	addlw	129
   949  0005C4  6EDF               	movwf	indf2,c
   950                           
   951                           ;sralloc.c: 244:     temp = pHeap + 1;
   952                           ;stkvar	_pHeap @ sp[(-6)+0]
   953  0005C6  0EFA               	movlw	-6
   954  0005C8  50E3               	movf	plusw1,w,c
   955  0005CA  0F01               	addlw	1
   956  0005CC  6E0B               	movwf	btemp+10,c
   957  0005CE  0EFB               	movlw	-5
   958  0005D0  CFE3 F00C          	movff	plusw1,btemp+11
   959  0005D4  0E00               	movlw	0
   960  0005D6  220C               	addwfc	btemp+11,f,c
   961                           
   962                           ;stkvar	_temp @ sp[(-6)+2]
   963  0005D8  0EFD               	movlw	-3
   964  0005DA  C00C  FFE3         	movff	btemp+11,plusw1
   965  0005DE  0EFC               	movlw	-4
   966  0005E0  C00B  FFE3         	movff	btemp+10,plusw1
   967                           
   968                           ;sralloc.c: 247:     pHeap += (nBytes + 1);
   969                           ;stkvar	_nBytes @ sp[(-6)+-1]
   970  0005E4  0EF9               	movlw	-7
   971  0005E6  50E3               	movf	plusw1,w,c
   972  0005E8  6E0B               	movwf	btemp+10,c
   973  0005EA  6A0C               	clrf	btemp+11,c
   974  0005EC  0E01               	movlw	1
   975  0005EE  260B               	addwf	btemp+10,f,c
   976  0005F0  0E00               	movlw	0
   977  0005F2  220C               	addwfc	btemp+11,f,c
   978                           
   979                           ;stkvar	_pHeap @ sp[(-6)+0]
   980  0005F4  50E1               	movf	fsr1l,w,c
   981  0005F6  0FFA               	addlw	-6
   982  0005F8  6ED9               	movwf	fsr2l,c
   983  0005FA  50E2               	movf	fsr1h,w,c
   984  0005FC  6EDA               	movwf	fsr2h,c
   985  0005FE  0EFF               	movlw	255
   986  000600  22DA               	addwfc	fsr2h,f,c
   987  000602  500B               	movf	btemp+10,w,c
   988  000604  26DE               	addwf	postinc2,f,c
   989  000606  500C               	movf	btemp+11,w,c
   990  000608  22DD               	addwfc	postdec2,f,c
   991                           
   992                           ;sralloc.c: 250:     (*pHeap).byte = segLen - nBytes;
   993                           ;stkvar	_pHeap @ sp[(-6)+0]
   994  00060A  0EFA               	movlw	-6
   995  00060C  CFE3 FFD9          	movff	plusw1,fsr2l
   996  000610  0EFB               	movlw	-5
   997  000612  CFE3 FFDA          	movff	plusw1,fsr2h
   998                           
   999                           ;stkvar	_nBytes @ sp[(-6)+-1]
  1000  000616  0EF9               	movlw	-7
  1001  000618  CFE3 F00C          	movff	plusw1,btemp+11
  1002                           
  1003                           ;stkvar	_segLen @ sp[(-6)+5]
  1004  00061C  0EFF               	movlw	-1
  1005  00061E  CFE3 F00B          	movff	plusw1,btemp+10
  1006  000622  500C               	movf	btemp+11,w,c
  1007  000624  5C0B               	subwf	btemp+10,w,c
  1008  000626  6EDF               	movwf	indf2,c
  1009                           
  1010                           ;sralloc.c: 253:     return ((unsigned char *) temp);
  1011                           ;stkvar	_temp @ sp[(-6)+2]
  1012  000628  0EFC               	movlw	-4
  1013  00062A  CFE3 F001          	movff	plusw1,btemp
  1014  00062E  0EFD               	movlw	-3
  1015  000630  CFE3 F002          	movff	plusw1,btemp+1
  1016  000634                     l265:
  1017                           
  1018                           ; _SRAMalloc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  1019  000634  0EF9               	movlw	249
  1020  000636  26E1               	addwf	fsr1l,f,c
  1021  000638  0EFF               	movlw	255
  1022  00063A  22E2               	addwfc	fsr1h,f,c
  1023  00063C  0012               	return		;funcret
  1024  00063E                     __end_of_SRAMalloc:
  1025                           	opt callstack 0
  1026                           
  1027 ;; *************** function __SRAMmerge *****************
  1028 ;; Defined at:
  1029 ;;		line 359 in file "sralloc.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;  pSegA           2  [STACK] PTR struct _SALLOC
  1032 ;;		 -> _uDynamicHeap(512), 
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;  pSegB           2  [STACK] PTR struct _SALLOC
  1035 ;;		 -> _uDynamicHeap(512), 
  1036 ;;  uSegB           1  [STACK] struct _SALLOC
  1037 ;;  uSegA           1  [STACK] struct _SALLOC
  1038 ;;  uSum            1  [STACK] struct _SALLOC
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1  [STACK] unsigned char 
  1041 ;; Registers used:
  1042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1048 ;;      Params:         0       0       0       0       0       0       0
  1049 ;;      Locals:         0       0       0       0       0       0       0
  1050 ;;      Temps:          0       0       0       0       0       0       0
  1051 ;;      Totals:         0       0       0       0       0       0       0
  1052 ;;Total ram usage:        0 bytes
  1053 ;; Hardware stack levels used:    1
  1054 ;; Hardware stack levels required when called:   10
  1055 ;; This function calls:
  1056 ;;		Nothing
  1057 ;; This function is called by:
  1058 ;;		_SRAMalloc
  1059 ;; This function uses a reentrant model
  1060 ;;
  1061                           
  1062                           	psect	text7
  1063  00063E                     __ptext7:
  1064                           	opt callstack 0
  1065  00063E                     __SRAMmerge:
  1066                           	opt callstack 0
  1067                           
  1068                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1069  00063E  0E05               	movlw	5
  1070  000640  26E1               	addwf	fsr1l,f,c
  1071  000642  0E00               	movlw	0
  1072  000644  22E2               	addwfc	fsr1h,f,c
  1073                           
  1074                           ;sralloc.c: 359:      unsigned char _SRAMmerge(SALLOC * pSegA);sralloc.c: 360: {;sralloc
      +                          .c: 361:  SALLOC * pSegB;;sralloc.c: 362:       SALLOC uSegA, uSegB, uSum;;sralloc.c: 36
      +                          6:  pSegB = pSegA + (*pSegA).byte;
  1075                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1076                           
  1077                           ;incstack = 0
  1078  000646  0EF9               	movlw	-7
  1079  000648  CFE3 FFD9          	movff	plusw1,fsr2l
  1080  00064C  0EFA               	movlw	-6
  1081  00064E  CFE3 FFDA          	movff	plusw1,fsr2h
  1082  000652  50DF               	movf	indf2,w,c
  1083  000654  6E0B               	movwf	btemp+10,c
  1084  000656  6A0C               	clrf	btemp+11,c
  1085                           
  1086                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1087  000658  0EF9               	movlw	-7
  1088  00065A  50E3               	movf	plusw1,w,c
  1089  00065C  260B               	addwf	btemp+10,f,c
  1090  00065E  0EFA               	movlw	-6
  1091  000660  50E3               	movf	plusw1,w,c
  1092  000662  220C               	addwfc	btemp+11,f,c
  1093                           
  1094                           ;stkvar	_pSegB @ sp[(-5)+0]
  1095  000664  0EFC               	movlw	-4
  1096  000666  C00C  FFE3         	movff	btemp+11,plusw1
  1097  00066A  0EFB               	movlw	-5
  1098  00066C  C00B  FFE3         	movff	btemp+10,plusw1
  1099                           
  1100                           ;sralloc.c: 369:  uSegA = *pSegA;
  1101                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1102  000670  0EF9               	movlw	-7
  1103  000672  CFE3 FFD9          	movff	plusw1,fsr2l
  1104  000676  0EFA               	movlw	-6
  1105  000678  CFE3 FFDA          	movff	plusw1,fsr2h
  1106  00067C  50DF               	movf	indf2,w,c
  1107  00067E  6E0C               	movwf	btemp+11,c
  1108                           
  1109                           ;stkvar	_uSegA @ sp[(-5)+3]
  1110  000680  0EFE               	movlw	-2
  1111  000682  C00C  FFE3         	movff	btemp+11,plusw1
  1112                           
  1113                           ;sralloc.c: 370:  uSegB = *pSegB;
  1114                           ;stkvar	_pSegB @ sp[(-5)+0]
  1115  000686  0EFB               	movlw	-5
  1116  000688  CFE3 FFD9          	movff	plusw1,fsr2l
  1117  00068C  0EFC               	movlw	-4
  1118  00068E  CFE3 FFDA          	movff	plusw1,fsr2h
  1119  000692  50DF               	movf	indf2,w,c
  1120  000694  6E0C               	movwf	btemp+11,c
  1121                           
  1122                           ;stkvar	_uSegB @ sp[(-5)+2]
  1123  000696  0EFD               	movlw	-3
  1124  000698  C00C  FFE3         	movff	btemp+11,plusw1
  1125                           
  1126                           ;sralloc.c: 373:  if (uSegB.byte == 0) return (0);
  1127                           ;stkvar	_uSegB @ sp[(-5)+2]
  1128  00069C  0EFD               	movlw	-3
  1129  00069E  50E3               	movf	plusw1,w,c
  1130  0006A0  A4D8               	btfss	status,2,c
  1131  0006A2  D002               	goto	l1028
  1132  0006A4                     u40:
  1133  0006A4  0E00               	movlw	0
  1134  0006A6  D06E               	goto	L2
  1135  0006A8                     l1028:
  1136                           
  1137                           ;sralloc.c: 376:  if (uSegA.bits.alloc || uSegB.bits.alloc) return (0);
  1138                           ;stkvar	_uSegA @ sp[(-5)+3]
  1139  0006A8  50E1               	movf	fsr1l,w,c
  1140  0006AA  0FFE               	addlw	-2
  1141  0006AC  6ED9               	movwf	fsr2l,c
  1142  0006AE  50E2               	movf	fsr1h,w,c
  1143  0006B0  6EDA               	movwf	fsr2h,c
  1144  0006B2  0EFF               	movlw	255
  1145  0006B4  22DA               	addwfc	fsr2h,f,c
  1146  0006B6  BEDF               	btfsc	indf2,7,c
  1147  0006B8  D7F5               	goto	u40
  1148                           
  1149                           ;stkvar	_uSegB @ sp[(-5)+2]
  1150  0006BA  50E1               	movf	fsr1l,w,c
  1151  0006BC  0FFD               	addlw	-3
  1152  0006BE  6ED9               	movwf	fsr2l,c
  1153  0006C0  50E2               	movf	fsr1h,w,c
  1154  0006C2  6EDA               	movwf	fsr2h,c
  1155  0006C4  0EFF               	movlw	255
  1156  0006C6  22DA               	addwfc	fsr2h,f,c
  1157  0006C8  BEDF               	btfsc	indf2,7,c
  1158  0006CA  D7EC               	goto	u40
  1159                           
  1160                           ;sralloc.c: 379:  if (uSegA.bits.count == 0x7F) return (0);
  1161                           ;stkvar	_uSegA @ sp[(-5)+3]
  1162  0006CC  50E1               	movf	fsr1l,w,c
  1163  0006CE  0FFE               	addlw	-2
  1164  0006D0  6ED9               	movwf	fsr2l,c
  1165  0006D2  50E2               	movf	fsr1h,w,c
  1166  0006D4  6EDA               	movwf	fsr2h,c
  1167  0006D6  0EFF               	movlw	255
  1168  0006D8  22DA               	addwfc	fsr2h,f,c
  1169  0006DA  50DF               	movf	223,w,c
  1170  0006DC  0B7F               	andlw	127
  1171  0006DE  0A7F               	xorlw	127
  1172  0006E0  B4D8               	btfsc	status,2,c
  1173  0006E2  D7E0               	goto	u40
  1174                           
  1175                           ;sralloc.c: 382:  uSum.byte = uSegA.byte + uSegB.byte;
  1176                           ;stkvar	_uSegB @ sp[(-5)+2]
  1177  0006E4  0EFD               	movlw	-3
  1178  0006E6  CFE3 F00C          	movff	plusw1,btemp+11
  1179                           
  1180                           ;stkvar	_uSegA @ sp[(-5)+3]
  1181  0006EA  0EFE               	movlw	-2
  1182  0006EC  50E3               	movf	plusw1,w,c
  1183  0006EE  240C               	addwf	btemp+11,w,c
  1184  0006F0  6E0B               	movwf	btemp+10,c
  1185                           
  1186                           ;stkvar	_uSum @ sp[(-5)+4]
  1187  0006F2  0EFF               	movlw	-1
  1188  0006F4  C00B  FFE3         	movff	btemp+10,plusw1
  1189                           
  1190                           ;sralloc.c: 388:  if ((uSum.byte) > 0x7F)
  1191                           ;stkvar	_uSum @ sp[(-5)+4]
  1192  0006F8  0EFF               	movlw	-1
  1193  0006FA  CFE3 F001          	movff	plusw1,btemp
  1194  0006FE  0E7F               	movlw	127
  1195  000700  6401               	cpfsgt	btemp,c
  1196  000702  D036               	goto	l1060
  1197                           
  1198                           ;sralloc.c: 389:  {;sralloc.c: 390:   (*pSegA).byte = 0x7F;
  1199                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1200  000704  0EF9               	movlw	-7
  1201  000706  CFE3 FFD9          	movff	plusw1,fsr2l
  1202  00070A  0EFA               	movlw	-6
  1203  00070C  CFE3 FFDA          	movff	plusw1,fsr2h
  1204  000710  0E7F               	movlw	127
  1205  000712  6EDF               	movwf	indf2,c
  1206                           
  1207                           ;sralloc.c: 391:   pSegA += 0x7F;
  1208                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1209  000714  0EF9               	movlw	-7
  1210  000716  50E3               	movf	plusw1,w,c
  1211  000718  0F7F               	addlw	127
  1212  00071A  6E01               	movwf	btemp,c
  1213  00071C  0EF9               	movlw	-7
  1214  00071E  C001  FFE3         	movff	btemp,plusw1
  1215  000722  6A01               	clrf	btemp,c
  1216  000724  0EFA               	movlw	-6
  1217  000726  50E3               	movf	plusw1,w,c
  1218  000728  2001               	addwfc	btemp,w,c
  1219  00072A  6E01               	movwf	btemp,c
  1220  00072C  0EFA               	movlw	-6
  1221  00072E  C001  FFE3         	movff	btemp,plusw1
  1222                           
  1223                           ;sralloc.c: 392:   pSegB += uSegB.byte;
  1224                           ;stkvar	_uSegB @ sp[(-5)+2]
  1225  000732  0EFD               	movlw	-3
  1226  000734  50E3               	movf	plusw1,w,c
  1227  000736  0D01               	mullw	1
  1228                           
  1229                           ;stkvar	_pSegB @ sp[(-5)+0]
  1230  000738  50E1               	movf	fsr1l,w,c
  1231  00073A  0FFB               	addlw	-5
  1232  00073C  6ED9               	movwf	fsr2l,c
  1233  00073E  50E2               	movf	fsr1h,w,c
  1234  000740  6EDA               	movwf	fsr2h,c
  1235  000742  0EFF               	movlw	255
  1236  000744  22DA               	addwfc	fsr2h,f,c
  1237  000746  50F3               	movf	prodl,w,c
  1238  000748  26DE               	addwf	postinc2,f,c
  1239  00074A  50F4               	movf	prodh,w,c
  1240  00074C  22DD               	addwfc	postdec2,f,c
  1241                           
  1242                           ;sralloc.c: 393:   (*pSegA).byte = pSegB - pSegA;
  1243                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1244  00074E  0EF9               	movlw	-7
  1245  000750  CFE3 FFD9          	movff	plusw1,fsr2l
  1246  000754  0EFA               	movlw	-6
  1247  000756  CFE3 FFDA          	movff	plusw1,fsr2h
  1248                           
  1249                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1250  00075A  0EF9               	movlw	-7
  1251  00075C  CFE3 F00C          	movff	plusw1,btemp+11
  1252                           
  1253                           ;stkvar	_pSegB @ sp[(-5)+0]
  1254  000760  0EFB               	movlw	-5
  1255  000762  CFE3 F00B          	movff	plusw1,btemp+10
  1256  000766  500C               	movf	btemp+11,w,c
  1257  000768  5C0B               	subwf	btemp+10,w,c
  1258  00076A  6EDF               	movwf	indf2,c
  1259                           
  1260                           ;sralloc.c: 395:   return (0x7F);
  1261  00076C  0E7F               	movlw	127
  1262  00076E  D00A               	goto	L2
  1263  000770                     l1060:
  1264                           
  1265                           ;sralloc.c: 400:  {;sralloc.c: 401:   return ((*pSegA).byte = uSum.byte);
  1266                           ;stkvar	_uSum @ sp[(-5)+4]
  1267                           ;stkvar	_pSegA @ sp[(-5)+-2]
  1268  000770  0EF9               	movlw	-7
  1269  000772  CFE3 FFD9          	movff	plusw1,fsr2l
  1270  000776  0EFA               	movlw	-6
  1271  000778  CFE3 FFDA          	movff	plusw1,fsr2h
  1272  00077C  0EFF               	movlw	-1
  1273  00077E  CFE3 FFDF          	movff	plusw1,indf2
  1274  000782  50DF               	movf	indf2,w,c
  1275  000784                     L2:
  1276  000784  6E01               	movwf	btemp,c
  1277                           
  1278                           ; __SRAMmerge: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
  1279  000786  0EF9               	movlw	249
  1280  000788  26E1               	addwf	fsr1l,f,c
  1281  00078A  0EFF               	movlw	255
  1282  00078C  22E2               	addwfc	fsr1h,f,c
  1283  00078E  0012               	return		;funcret
  1284  000790                     __end_of__SRAMmerge:
  1285                           	opt callstack 0
  1286                           
  1287 ;; *************** function _lunos_init *****************
  1288 ;; Defined at:
  1289 ;;		line 58 in file "kernel.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;		None
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;		None
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1  [STACK] void 
  1296 ;; Registers used:
  1297 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1303 ;;      Params:         0       0       0       0       0       0       0
  1304 ;;      Locals:         0       0       0       0       0       0       0
  1305 ;;      Temps:          0       0       0       0       0       0       0
  1306 ;;      Totals:         0       0       0       0       0       0       0
  1307 ;;Total ram usage:        0 bytes
  1308 ;; Hardware stack levels used:    1
  1309 ;; Hardware stack levels required when called:   11
  1310 ;; This function calls:
  1311 ;;		_SRAMInitHeap
  1312 ;;		_lunos_createTask
  1313 ;; This function is called by:
  1314 ;;		_main
  1315 ;; This function uses a reentrant model
  1316 ;;
  1317                           
  1318                           	psect	text8
  1319  0010C6                     __ptext8:
  1320                           	opt callstack 0
  1321  0010C6                     _lunos_init:
  1322                           	opt callstack 19
  1323                           
  1324                           ;kernel.c: 59:   SRAMInitHeap();
  1325                           
  1326                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1327                           ;incstack = 0
  1328  0010C6  EC55  F006         	call	_SRAMInitHeap	;wreg free
  1329                           
  1330                           ;kernel.c: 60:   ready_queue.task_running = 0;
  1331  0010CA  0E00               	movlw	0
  1332  0010CC  CFE8 F3FE          	movff	wreg,_ready_queue+542
  1333  0010D0  0E00               	movlw	0
  1334  0010D2  CFE8 F3FF          	movff	wreg,_ready_queue+543
  1335                           
  1336                           ;kernel.c: 61:   ready_queue.tasks_installed = 0;
  1337  0010D6  0E00               	movlw	0
  1338  0010D8  CFE8 F3FC          	movff	wreg,_ready_queue+540
  1339  0010DC  0E00               	movlw	0
  1340  0010DE  CFE8 F3FD          	movff	wreg,_ready_queue+541
  1341                           
  1342                           ;kernel.c: 62:   lunos_createTask(0, &task_idle);
  1343  0010E2  0E86               	movlw	low _task_idle
  1344  0010E4  6EE6               	movwf	postinc1,c
  1345  0010E6  0E11               	movlw	high _task_idle
  1346  0010E8  6EE6               	movwf	postinc1,c
  1347  0010EA  0E00               	movlw	0
  1348  0010EC  6EE6               	movwf	postinc1,c
  1349  0010EE  0E00               	movlw	0
  1350  0010F0  6EE6               	movwf	postinc1,c
  1351  0010F2  EC60  F005         	call	_lunos_createTask	;wreg free
  1352                           
  1353                           ; _lunos_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  1354  0010F6  0012               	return		;funcret
  1355  0010F8                     __end_of_lunos_init:
  1356                           	opt callstack 0
  1357                           
  1358 ;; *************** function _lunos_createTask *****************
  1359 ;; Defined at:
  1360 ;;		line 22 in file "kernel.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;  prior           2  [STACK] unsigned int 
  1363 ;;  f               2  [STACK] PTR FTN()void 
  1364 ;;		 -> task_2(1), task_1(1), task_0(1), task_idle(1), 
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;  new_task      108  [STACK] struct pcb
  1367 ;; Return value:  Size  Location     Type
  1368 ;;                  1  [STACK] void 
  1369 ;; Registers used:
  1370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, pro
      +dh
  1371 ;; Tracked objects:
  1372 ;;		On entry : 0/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1376 ;;      Params:         0       0       0       0       0       0       0
  1377 ;;      Locals:         0       0       0       0       0       0       0
  1378 ;;      Temps:          0       0       0       0       0       0       0
  1379 ;;      Totals:         0       0       0       0       0       0       0
  1380 ;;Total ram usage:        0 bytes
  1381 ;; Hardware stack levels used:    1
  1382 ;; Hardware stack levels required when called:   10
  1383 ;; This function calls:
  1384 ;;		Nothing
  1385 ;; This function is called by:
  1386 ;;		_lunos_init
  1387 ;;		_main
  1388 ;; This function uses a reentrant model
  1389 ;;
  1390                           
  1391                           	psect	text9
  1392  000AC0                     __ptext9:
  1393                           	opt callstack 0
  1394  000AC0                     _lunos_createTask:
  1395                           	opt callstack 0
  1396                           
  1397                           ; autosize = 108, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 v
      +                          argsize = 0, retsize = 0 argfudge = 0
  1398  000AC0  0E6C               	movlw	108
  1399  000AC2  26E1               	addwf	fsr1l,f,c
  1400  000AC4  0E00               	movlw	0
  1401  000AC6  22E2               	addwfc	fsr1h,f,c
  1402                           
  1403                           ;kernel.c: 23:   t_pcb new_task;;kernel.c: 26:   new_task.task_id = ready_queue.tasks_in
      +                          stalled + 1;
  1404                           
  1405                           ;incstack = 0
  1406  000AC8  EE23  F0FC         	lfsr	2,_ready_queue+540
  1407  000ACC  CFDE F00B          	movff	postinc2,btemp+10
  1408  000AD0  CFDD F00C          	movff	postdec2,btemp+11
  1409  000AD4  0E01               	movlw	1
  1410  000AD6  260B               	addwf	btemp+10,f,c
  1411  000AD8  0E00               	movlw	0
  1412  000ADA  220C               	addwfc	btemp+11,f,c
  1413                           
  1414                           ;stkvar	_new_task @ sp[(-108)+0]
  1415  000ADC  0E94               	movlw	-108
  1416  000ADE  C00B  FFE3         	movff	btemp+10,plusw1
  1417  000AE2  0E95               	movlw	-107
  1418  000AE4  C00C  FFE3         	movff	btemp+11,plusw1
  1419                           
  1420                           ;kernel.c: 27:   new_task.task_prior = prior;
  1421                           ;stkvar	_prior @ sp[(-108)+-2]
  1422  000AE8  50E1               	movf	fsr1l,w,c
  1423  000AEA  0F92               	addlw	-110
  1424  000AEC  6ED9               	movwf	fsr2l,c
  1425  000AEE  50E2               	movf	fsr1h,w,c
  1426  000AF0  6EDA               	movwf	fsr2h,c
  1427  000AF2  0EFF               	movlw	255
  1428  000AF4  22DA               	addwfc	fsr2h,f,c
  1429                           
  1430                           ;stkvar	_new_task @ sp[(-108)+0]
  1431  000AF6  0E96               	movlw	150
  1432  000AF8  24E1               	addwf	fsr1l,w,c
  1433  000AFA  6EE9               	movwf	fsr0l,c
  1434  000AFC  0EFF               	movlw	255
  1435  000AFE  20E2               	addwfc	fsr1h,w,c
  1436  000B00  6EEA               	movwf	fsr0h,c
  1437  000B02  CFDE FFEE          	movff	postinc2,postinc0
  1438  000B06  CFDD FFED          	movff	postdec2,postdec0
  1439                           
  1440                           ;kernel.c: 28:   new_task.task_state = READY;
  1441                           ;stkvar	_new_task @ sp[(-108)+0]
  1442  000B0A  0E9C               	movlw	156
  1443  000B0C  24E1               	addwf	fsr1l,w,c
  1444  000B0E  6ED9               	movwf	fsr2l,c
  1445  000B10  0EFF               	movlw	255
  1446  000B12  20E2               	addwfc	fsr1h,w,c
  1447  000B14  6EDA               	movwf	fsr2h,c
  1448  000B16  0E00               	movlw	0
  1449  000B18  6EDF               	movwf	indf2,c
  1450                           
  1451                           ;kernel.c: 29:   new_task.task_f = f;
  1452                           ;stkvar	_f @ sp[(-108)+-4]
  1453  000B1A  50E1               	movf	fsr1l,w,c
  1454  000B1C  0F90               	addlw	-112
  1455  000B1E  6ED9               	movwf	fsr2l,c
  1456  000B20  50E2               	movf	fsr1h,w,c
  1457  000B22  6EDA               	movwf	fsr2h,c
  1458  000B24  0EFF               	movlw	255
  1459  000B26  22DA               	addwfc	fsr2h,f,c
  1460                           
  1461                           ;stkvar	_new_task @ sp[(-108)+0]
  1462  000B28  0EFC               	movlw	252
  1463  000B2A  24E1               	addwf	fsr1l,w,c
  1464  000B2C  6EE9               	movwf	fsr0l,c
  1465  000B2E  0EFF               	movlw	255
  1466  000B30  20E2               	addwfc	fsr1h,w,c
  1467  000B32  6EEA               	movwf	fsr0h,c
  1468  000B34  CFDE FFEE          	movff	postinc2,postinc0
  1469  000B38  CFDD FFED          	movff	postdec2,postdec0
  1470                           
  1471                           ;kernel.c: 30:   new_task.task_stack.stack_level = 0;
  1472                           ;stkvar	_new_task @ sp[(-108)+0]
  1473  000B3C  0EFA               	movlw	250
  1474  000B3E  24E1               	addwf	fsr1l,w,c
  1475  000B40  6ED9               	movwf	fsr2l,c
  1476  000B42  0EFF               	movlw	255
  1477  000B44  20E2               	addwfc	fsr1h,w,c
  1478  000B46  6EDA               	movwf	fsr2h,c
  1479  000B48  0E00               	movlw	0
  1480  000B4A  6EDE               	movwf	postinc2,c
  1481  000B4C  0E00               	movlw	0
  1482  000B4E  6EDD               	movwf	postdec2,c
  1483                           
  1484                           ;kernel.c: 31:   new_task.task_delay_time = 0;
  1485                           ;stkvar	_new_task @ sp[(-108)+0]
  1486  000B50  0EFE               	movlw	254
  1487  000B52  24E1               	addwf	fsr1l,w,c
  1488  000B54  6ED9               	movwf	fsr2l,c
  1489  000B56  0EFF               	movlw	255
  1490  000B58  20E2               	addwfc	fsr1h,w,c
  1491  000B5A  6EDA               	movwf	fsr2h,c
  1492  000B5C  0E00               	movlw	0
  1493  000B5E  6EDE               	movwf	postinc2,c
  1494  000B60  0E00               	movlw	0
  1495  000B62  6EDD               	movwf	postdec2,c
  1496                           
  1497                           ;kernel.c: 34:   ready_queue.tasks[ready_queue.tasks_installed] = new_task;
  1498                           ;stkvar	_new_task @ sp[(-108)+0]
  1499  000B64  0E94               	movlw	148
  1500  000B66  24E1               	addwf	fsr1l,w,c
  1501  000B68  6ED9               	movwf	fsr2l,c
  1502  000B6A  0EFF               	movlw	255
  1503  000B6C  20E2               	addwfc	fsr1h,w,c
  1504  000B6E  6EDA               	movwf	fsr2h,c
  1505  000B70  EE03  F0FC         	lfsr	0,_ready_queue+540
  1506  000B74  CFEE F00B          	movff	postinc0,btemp+10
  1507  000B78  CFED F00C          	movff	postdec0,btemp+11
  1508  000B7C  0E6C               	movlw	108
  1509  000B7E  020B               	mulwf	btemp+10,c
  1510  000B80  CFF3 F009          	movff	prodl,btemp+8
  1511  000B84  CFF4 F00A          	movff	prodh,btemp+9
  1512  000B88  020C               	mulwf	btemp+11,c
  1513  000B8A  50F3               	movf	prodl,w,c
  1514  000B8C  260A               	addwf	btemp+9,f,c
  1515  000B8E  0EE0               	movlw	low _ready_queue
  1516  000B90  2409               	addwf	btemp+8,w,c
  1517  000B92  6EE9               	movwf	fsr0l,c
  1518  000B94  0E01               	movlw	high _ready_queue
  1519  000B96  200A               	addwfc	btemp+9,w,c
  1520  000B98  6EEA               	movwf	fsr0h,c
  1521  000B9A  0E6B               	movlw	107
  1522  000B9C                     u91:
  1523  000B9C  CFDB FFEB          	movff	plusw2,plusw0
  1524  000BA0  06E8               	decf	wreg,f,c
  1525  000BA2  E2FC               	bc	u91
  1526                           
  1527                           ;kernel.c: 35:   ready_queue.tasks_installed++;
  1528  000BA4  EE23  F0FC         	lfsr	2,_ready_queue+540
  1529  000BA8  2ADE               	incf	postinc2,f,c
  1530  000BAA  0E00               	movlw	0
  1531  000BAC  22DD               	addwfc	postdec2,f,c
  1532                           
  1533                           ; _lunos_createTask: autosize = 108, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 4, argsize = 4, vargsize = 0
  1534  000BAE  0E90               	movlw	144
  1535  000BB0  26E1               	addwf	fsr1l,f,c
  1536  000BB2  0EFF               	movlw	255
  1537  000BB4  22E2               	addwfc	fsr1h,f,c
  1538  000BB6  0012               	return		;funcret
  1539  000BB8                     __end_of_lunos_createTask:
  1540                           	opt callstack 0
  1541                           
  1542 ;; *************** function _SRAMInitHeap *****************
  1543 ;; Defined at:
  1544 ;;		line 313 in file "sralloc.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;  count           2  [STACK] unsigned int 
  1549 ;;  pHeap           2  [STACK] PTR unsigned char 
  1550 ;;		 -> _uDynamicHeap(512), 
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1  [STACK] void 
  1553 ;; Registers used:
  1554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1560 ;;      Params:         0       0       0       0       0       0       0
  1561 ;;      Locals:         0       0       0       0       0       0       0
  1562 ;;      Temps:          0       0       0       0       0       0       0
  1563 ;;      Totals:         0       0       0       0       0       0       0
  1564 ;;Total ram usage:        0 bytes
  1565 ;; Hardware stack levels used:    1
  1566 ;; Hardware stack levels required when called:   10
  1567 ;; This function calls:
  1568 ;;		Nothing
  1569 ;; This function is called by:
  1570 ;;		_lunos_init
  1571 ;; This function uses a reentrant model
  1572 ;;
  1573                           
  1574                           	psect	text10
  1575  000CAA                     __ptext10:
  1576                           	opt callstack 0
  1577  000CAA                     _SRAMInitHeap:
  1578                           	opt callstack 0
  1579                           
  1580                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1581  000CAA  52E6               	movf	postinc1,f,c
  1582  000CAC  52E6               	movf	postinc1,f,c
  1583  000CAE  52E6               	movf	postinc1,f,c
  1584  000CB0  52E6               	movf	postinc1,f,c
  1585                           
  1586                           ;sralloc.c: 315:  unsigned char * pHeap;;sralloc.c: 316:       unsigned int count;;srall
      +                          oc.c: 318:  pHeap = _uDynamicHeap;
  1587                           ;stkvar	_pHeap @ sp[(-4)+2]
  1588                           
  1589                           ;incstack = 0
  1590  000CB2  0E04               	movlw	high __uDynamicHeap
  1591  000CB4  6E01               	movwf	btemp,c
  1592  000CB6  0EFF               	movlw	-1
  1593  000CB8  C001  FFE3         	movff	btemp,plusw1
  1594  000CBC  0E00               	movlw	low __uDynamicHeap
  1595  000CBE  6E01               	movwf	btemp,c
  1596  000CC0  0EFE               	movlw	-2
  1597  000CC2  C001  FFE3         	movff	btemp,plusw1
  1598                           
  1599                           ;sralloc.c: 319:  count = 0x200 -1;
  1600  000CC6  0EFF               	movlw	255
  1601  000CC8  6E0B               	movwf	btemp+10,c
  1602  000CCA  0E01               	movlw	1
  1603  000CCC  6E0C               	movwf	btemp+11,c
  1604                           
  1605                           ;stkvar	_count @ sp[(-4)+0]
  1606  000CCE  0EFC               	movlw	-4
  1607  000CD0  C00B  FFE3         	movff	btemp+10,plusw1
  1608  000CD4  0EFD               	movlw	-3
  1609  000CD6  C00C  FFE3         	movff	btemp+11,plusw1
  1610  000CDA                     l1124:
  1611                           
  1612                           ;sralloc.c: 322:  {;sralloc.c: 323:   if (count > 0x7F)
  1613                           ;stkvar	_count @ sp[(-4)+0]
  1614  000CDA  0EFD               	movlw	-3
  1615  000CDC  50E3               	movf	plusw1,w,c
  1616  000CDE  E107               	bnz	u130
  1617  000CE0  0EFC               	movlw	-4
  1618  000CE2  CFE3 F001          	movff	plusw1,btemp
  1619  000CE6  0E80               	movlw	128
  1620  000CE8  5E01               	subwf	btemp,f,c
  1621  000CEA  A0D8               	btfss	status,0,c
  1622  000CEC  D023               	goto	l1132
  1623  000CEE                     u130:
  1624                           
  1625                           ;sralloc.c: 324:   {;sralloc.c: 325:    *pHeap = 0x7F;
  1626                           ;stkvar	_pHeap @ sp[(-4)+2]
  1627  000CEE  0EFE               	movlw	-2
  1628  000CF0  CFE3 FFD9          	movff	plusw1,fsr2l
  1629  000CF4  0EFF               	movlw	-1
  1630  000CF6  CFE3 FFDA          	movff	plusw1,fsr2h
  1631  000CFA  0E7F               	movlw	127
  1632  000CFC  6EDF               	movwf	indf2,c
  1633                           
  1634                           ;sralloc.c: 326:    pHeap += 0x7F;
  1635                           ;stkvar	_pHeap @ sp[(-4)+2]
  1636  000CFE  0EFE               	movlw	-2
  1637  000D00  50E3               	movf	plusw1,w,c
  1638  000D02  0F7F               	addlw	127
  1639  000D04  6E01               	movwf	btemp,c
  1640  000D06  0EFE               	movlw	-2
  1641  000D08  C001  FFE3         	movff	btemp,plusw1
  1642  000D0C  6A01               	clrf	btemp,c
  1643  000D0E  0EFF               	movlw	-1
  1644  000D10  50E3               	movf	plusw1,w,c
  1645  000D12  2001               	addwfc	btemp,w,c
  1646  000D14  6E01               	movwf	btemp,c
  1647  000D16  0EFF               	movlw	-1
  1648  000D18  C001  FFE3         	movff	btemp,plusw1
  1649                           
  1650                           ;sralloc.c: 327:    count = count - 0x7F;
  1651                           ;stkvar	_count @ sp[(-4)+0]
  1652  000D1C  50E1               	movf	fsr1l,w,c
  1653  000D1E  0FFC               	addlw	-4
  1654  000D20  6ED9               	movwf	fsr2l,c
  1655  000D22  50E2               	movf	fsr1h,w,c
  1656  000D24  6EDA               	movwf	fsr2h,c
  1657  000D26  0EFF               	movlw	255
  1658  000D28  22DA               	addwfc	fsr2h,f,c
  1659  000D2A  0E81               	movlw	129
  1660  000D2C  26DE               	addwf	postinc2,f,c
  1661  000D2E  0EFF               	movlw	255
  1662  000D30  22DD               	addwfc	postdec2,f,c
  1663                           
  1664                           ;sralloc.c: 328:   }
  1665  000D32  D7D3               	goto	l1124
  1666  000D34                     l1132:
  1667                           
  1668                           ;sralloc.c: 330:   {;sralloc.c: 331:    *pHeap = count;
  1669                           ;stkvar	_count @ sp[(-4)+0]
  1670                           ;stkvar	_pHeap @ sp[(-4)+2]
  1671  000D34  0EFE               	movlw	-2
  1672  000D36  CFE3 FFD9          	movff	plusw1,fsr2l
  1673  000D3A  0EFF               	movlw	-1
  1674  000D3C  CFE3 FFDA          	movff	plusw1,fsr2h
  1675  000D40  0EFC               	movlw	-4
  1676  000D42  CFE3 FFDF          	movff	plusw1,indf2
  1677                           
  1678                           ;sralloc.c: 332:    *(pHeap + count) = 0;
  1679                           ;stkvar	_count @ sp[(-4)+0]
  1680  000D46  0EFC               	movlw	-4
  1681  000D48  CFE3 F00B          	movff	plusw1,btemp+10
  1682  000D4C  0EFD               	movlw	-3
  1683  000D4E  CFE3 F00C          	movff	plusw1,btemp+11
  1684                           
  1685                           ;stkvar	_pHeap @ sp[(-4)+2]
  1686  000D52  0EFE               	movlw	-2
  1687  000D54  CFE3 F009          	movff	plusw1,btemp+8
  1688  000D58  0EFF               	movlw	-1
  1689  000D5A  CFE3 F00A          	movff	plusw1,btemp+9
  1690  000D5E  500B               	movf	btemp+10,w,c
  1691  000D60  2409               	addwf	btemp+8,w,c
  1692  000D62  6ED9               	movwf	fsr2l,c
  1693  000D64  500C               	movf	btemp+11,w,c
  1694  000D66  200A               	addwfc	btemp+9,w,c
  1695  000D68  6EDA               	movwf	fsr2h,c
  1696  000D6A  0E00               	movlw	0
  1697  000D6C  6EDF               	movwf	indf2,c
  1698                           
  1699                           ; _SRAMInitHeap: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  1700  000D6E  52E5               	movf	postdec1,f,c
  1701  000D70  52E5               	movf	postdec1,f,c
  1702  000D72  52E5               	movf	postdec1,f,c
  1703  000D74  52E5               	movf	postdec1,f,c
  1704  000D76  0012               	return		;funcret
  1705  000D78                     __end_of_SRAMInitHeap:
  1706                           	opt callstack 0
  1707                           
  1708 ;; *************** function _dispatcher *****************
  1709 ;; Defined at:
  1710 ;;		line 73 in file "kernel.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;  state           1  [STACK] enum E4
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;		None
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  1  [STACK] void 
  1717 ;; Registers used:
  1718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1724 ;;      Params:         0       0       0       0       0       0       0
  1725 ;;      Locals:         0       0       0       0       0       0       0
  1726 ;;      Temps:          0       0       0       0       0       0       0
  1727 ;;      Totals:         0       0       0       0       0       0       0
  1728 ;;Total ram usage:        0 bytes
  1729 ;; Hardware stack levels used:    1
  1730 ;; Hardware stack levels required when called:   12
  1731 ;; This function calls:
  1732 ;;		_scheduler
  1733 ;; This function is called by:
  1734 ;;		_lunos_delayTask
  1735 ;;		_delay_decrement
  1736 ;;		_main
  1737 ;; This function uses a reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text11
  1741  000014                     __ptext11:
  1742                           	opt callstack 0
  1743  000014                     _dispatcher:
  1744                           	opt callstack 8
  1745                           
  1746                           ;kernel.c: 74:   INTCONbits.GIE = 0;
  1747                           
  1748                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1749                           ;incstack = 0
  1750  000014  9EF2               	bcf	4082,7,c	;volatile
  1751                           
  1752                           ;kernel.c: 76:   { who = ready_queue.task_running; ready_queue.tasks[who].task_state = s
      +                          tate; ready_queue.tasks[who].W_reg = WREG; ready_queue.tasks[who].STATUS_reg = STATUS; r
      +                          eady_queue.tasks[who].BSR_reg = BSR; size = 0; while (STKPTR) { ready_queue.tasks[who].t
      +                          ask_stack.h_stack[size].TOSU_reg = TOSU; ready_queue.tasks[who].task_stack.h_stack[size]
      +                          .TOSH_reg = TOSH; ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg = TOSL; size+
      +                          +; __asm("POP"); } ready_queue.tasks[who].task_stack.stack_level = size;};
  1753  000016  C3FE  F023         	movff	_ready_queue+542,_who
  1754  00001A  C3FF  F024         	movff	_ready_queue+543,_who+1
  1755                           
  1756                           ;stkvar	_state @ sp[(0)+-1]
  1757  00001E  C023  F00B         	movff	_who,btemp+10
  1758  000022  C024  F00C         	movff	_who+1,btemp+11
  1759  000026  0E6C               	movlw	108
  1760  000028  020B               	mulwf	btemp+10,c
  1761  00002A  CFF3 F009          	movff	prodl,btemp+8
  1762  00002E  CFF4 F00A          	movff	prodh,btemp+9
  1763  000032  020C               	mulwf	btemp+11,c
  1764  000034  50F3               	movf	prodl,w,c
  1765  000036  260A               	addwf	btemp+9,f,c
  1766  000038  0EE8               	movlw	low (_ready_queue+8)
  1767  00003A  2409               	addwf	btemp+8,w,c
  1768  00003C  6ED9               	movwf	fsr2l,c
  1769  00003E  0E01               	movlw	high (_ready_queue+8)
  1770  000040  200A               	addwfc	btemp+9,w,c
  1771  000042  6EDA               	movwf	fsr2h,c
  1772  000044  0EFF               	movlw	-1
  1773  000046  CFE3 FFDF          	movff	plusw1,indf2
  1774  00004A  C023  F00B         	movff	_who,btemp+10
  1775  00004E  C024  F00C         	movff	_who+1,btemp+11
  1776  000052  0E6C               	movlw	108
  1777  000054  020B               	mulwf	btemp+10,c
  1778  000056  CFF3 F009          	movff	prodl,btemp+8
  1779  00005A  CFF4 F00A          	movff	prodh,btemp+9
  1780  00005E  020C               	mulwf	btemp+11,c
  1781  000060  50F3               	movf	prodl,w,c
  1782  000062  260A               	addwf	btemp+9,f,c
  1783  000064  0EE5               	movlw	low (_ready_queue+5)
  1784  000066  2409               	addwf	btemp+8,w,c
  1785  000068  6ED9               	movwf	fsr2l,c
  1786  00006A  0E01               	movlw	high (_ready_queue+5)
  1787  00006C  200A               	addwfc	btemp+9,w,c
  1788  00006E  6EDA               	movwf	fsr2h,c
  1789  000070  CFE8 FFDF          	movff	wreg,indf2	;volatile
  1790  000074  C023  F00B         	movff	_who,btemp+10
  1791  000078  C024  F00C         	movff	_who+1,btemp+11
  1792  00007C  0E6C               	movlw	108
  1793  00007E  020B               	mulwf	btemp+10,c
  1794  000080  CFF3 F009          	movff	prodl,btemp+8
  1795  000084  CFF4 F00A          	movff	prodh,btemp+9
  1796  000088  020C               	mulwf	btemp+11,c
  1797  00008A  50F3               	movf	prodl,w,c
  1798  00008C  260A               	addwf	btemp+9,f,c
  1799  00008E  0EE6               	movlw	low (_ready_queue+6)
  1800  000090  2409               	addwf	btemp+8,w,c
  1801  000092  6ED9               	movwf	fsr2l,c
  1802  000094  0E01               	movlw	high (_ready_queue+6)
  1803  000096  200A               	addwfc	btemp+9,w,c
  1804  000098  6EDA               	movwf	fsr2h,c
  1805  00009A  CFD8 FFDF          	movff	status,indf2	;volatile
  1806  00009E  C023  F00B         	movff	_who,btemp+10
  1807  0000A2  C024  F00C         	movff	_who+1,btemp+11
  1808  0000A6  0E6C               	movlw	108
  1809  0000A8  020B               	mulwf	btemp+10,c
  1810  0000AA  CFF3 F009          	movff	prodl,btemp+8
  1811  0000AE  CFF4 F00A          	movff	prodh,btemp+9
  1812  0000B2  020C               	mulwf	btemp+11,c
  1813  0000B4  50F3               	movf	prodl,w,c
  1814  0000B6  260A               	addwf	btemp+9,f,c
  1815  0000B8  0EE7               	movlw	low (_ready_queue+7)
  1816  0000BA  2409               	addwf	btemp+8,w,c
  1817  0000BC  6ED9               	movwf	fsr2l,c
  1818  0000BE  0E01               	movlw	high (_ready_queue+7)
  1819  0000C0  200A               	addwfc	btemp+9,w,c
  1820  0000C2  6EDA               	movwf	fsr2h,c
  1821  0000C4  CFE0 FFDF          	movff	bsr,indf2	;volatile
  1822  0000C8  6A21               	clrf	_size,c
  1823  0000CA  6A22               	clrf	_size+1,c
  1824  0000CC  D08D               	goto	l1096
  1825  0000CE                     l1092:
  1826  0000CE  C021  F00B         	movff	_size,btemp+10
  1827  0000D2  C022  F00C         	movff	_size+1,btemp+11
  1828  0000D6  0E03               	movlw	3
  1829  0000D8  020B               	mulwf	btemp+10,c
  1830  0000DA  CFF3 F009          	movff	prodl,btemp+8
  1831  0000DE  CFF4 F00A          	movff	prodh,btemp+9
  1832  0000E2  020C               	mulwf	btemp+11,c
  1833  0000E4  50F3               	movf	prodl,w,c
  1834  0000E6  260A               	addwf	btemp+9,f,c
  1835  0000E8  C023  F00B         	movff	_who,btemp+10
  1836  0000EC  C024  F00C         	movff	_who+1,btemp+11
  1837  0000F0  0E6C               	movlw	108
  1838  0000F2  020B               	mulwf	btemp+10,c
  1839  0000F4  CFF3 F007          	movff	prodl,btemp+6
  1840  0000F8  CFF4 F008          	movff	prodh,btemp+7
  1841  0000FC  020C               	mulwf	btemp+11,c
  1842  0000FE  50F3               	movf	prodl,w,c
  1843  000100  2608               	addwf	btemp+7,f,c
  1844  000102  0EE0               	movlw	low _ready_queue
  1845  000104  6E0B               	movwf	btemp+10,c
  1846  000106  0E01               	movlw	high _ready_queue
  1847  000108  6E0C               	movwf	btemp+11,c
  1848  00010A  0E09               	movlw	9
  1849  00010C  260B               	addwf	btemp+10,f,c
  1850  00010E  0E00               	movlw	0
  1851  000110  220C               	addwfc	btemp+11,f,c
  1852  000112  5007               	movf	btemp+6,w,c
  1853  000114  260B               	addwf	btemp+10,f,c
  1854  000116  5008               	movf	btemp+7,w,c
  1855  000118  220C               	addwfc	btemp+11,f,c
  1856  00011A  5009               	movf	btemp+8,w,c
  1857  00011C  240B               	addwf	btemp+10,w,c
  1858  00011E  6ED9               	movwf	fsr2l,c
  1859  000120  500A               	movf	btemp+9,w,c
  1860  000122  200C               	addwfc	btemp+11,w,c
  1861  000124  6EDA               	movwf	fsr2h,c
  1862  000126  CFFF FFDF          	movff	tosu,indf2	;volatile
  1863  00012A  C021  F00B         	movff	_size,btemp+10
  1864  00012E  C022  F00C         	movff	_size+1,btemp+11
  1865  000132  0E03               	movlw	3
  1866  000134  020B               	mulwf	btemp+10,c
  1867  000136  CFF3 F009          	movff	prodl,btemp+8
  1868  00013A  CFF4 F00A          	movff	prodh,btemp+9
  1869  00013E  020C               	mulwf	btemp+11,c
  1870  000140  50F3               	movf	prodl,w,c
  1871  000142  260A               	addwf	btemp+9,f,c
  1872  000144  C023  F00B         	movff	_who,btemp+10
  1873  000148  C024  F00C         	movff	_who+1,btemp+11
  1874  00014C  0E6C               	movlw	108
  1875  00014E  020B               	mulwf	btemp+10,c
  1876  000150  CFF3 F007          	movff	prodl,btemp+6
  1877  000154  CFF4 F008          	movff	prodh,btemp+7
  1878  000158  020C               	mulwf	btemp+11,c
  1879  00015A  50F3               	movf	prodl,w,c
  1880  00015C  2608               	addwf	btemp+7,f,c
  1881  00015E  0EE0               	movlw	low _ready_queue
  1882  000160  6E0B               	movwf	btemp+10,c
  1883  000162  0E01               	movlw	high _ready_queue
  1884  000164  6E0C               	movwf	btemp+11,c
  1885  000166  0E0B               	movlw	11
  1886  000168  260B               	addwf	btemp+10,f,c
  1887  00016A  0E00               	movlw	0
  1888  00016C  220C               	addwfc	btemp+11,f,c
  1889  00016E  5007               	movf	btemp+6,w,c
  1890  000170  260B               	addwf	btemp+10,f,c
  1891  000172  5008               	movf	btemp+7,w,c
  1892  000174  220C               	addwfc	btemp+11,f,c
  1893  000176  5009               	movf	btemp+8,w,c
  1894  000178  240B               	addwf	btemp+10,w,c
  1895  00017A  6ED9               	movwf	fsr2l,c
  1896  00017C  500A               	movf	btemp+9,w,c
  1897  00017E  200C               	addwfc	btemp+11,w,c
  1898  000180  6EDA               	movwf	fsr2h,c
  1899  000182  CFFE FFDF          	movff	tosh,indf2	;volatile
  1900  000186  C021  F00B         	movff	_size,btemp+10
  1901  00018A  C022  F00C         	movff	_size+1,btemp+11
  1902  00018E  0E03               	movlw	3
  1903  000190  020B               	mulwf	btemp+10,c
  1904  000192  CFF3 F009          	movff	prodl,btemp+8
  1905  000196  CFF4 F00A          	movff	prodh,btemp+9
  1906  00019A  020C               	mulwf	btemp+11,c
  1907  00019C  50F3               	movf	prodl,w,c
  1908  00019E  260A               	addwf	btemp+9,f,c
  1909  0001A0  C023  F00B         	movff	_who,btemp+10
  1910  0001A4  C024  F00C         	movff	_who+1,btemp+11
  1911  0001A8  0E6C               	movlw	108
  1912  0001AA  020B               	mulwf	btemp+10,c
  1913  0001AC  CFF3 F007          	movff	prodl,btemp+6
  1914  0001B0  CFF4 F008          	movff	prodh,btemp+7
  1915  0001B4  020C               	mulwf	btemp+11,c
  1916  0001B6  50F3               	movf	prodl,w,c
  1917  0001B8  2608               	addwf	btemp+7,f,c
  1918  0001BA  0EE0               	movlw	low _ready_queue
  1919  0001BC  6E0B               	movwf	btemp+10,c
  1920  0001BE  0E01               	movlw	high _ready_queue
  1921  0001C0  6E0C               	movwf	btemp+11,c
  1922  0001C2  0E0A               	movlw	10
  1923  0001C4  260B               	addwf	btemp+10,f,c
  1924  0001C6  0E00               	movlw	0
  1925  0001C8  220C               	addwfc	btemp+11,f,c
  1926  0001CA  5007               	movf	btemp+6,w,c
  1927  0001CC  260B               	addwf	btemp+10,f,c
  1928  0001CE  5008               	movf	btemp+7,w,c
  1929  0001D0  220C               	addwfc	btemp+11,f,c
  1930  0001D2  5009               	movf	btemp+8,w,c
  1931  0001D4  240B               	addwf	btemp+10,w,c
  1932  0001D6  6ED9               	movwf	fsr2l,c
  1933  0001D8  500A               	movf	btemp+9,w,c
  1934  0001DA  200C               	addwfc	btemp+11,w,c
  1935  0001DC  6EDA               	movwf	fsr2h,c
  1936  0001DE  CFFD FFDF          	movff	tosl,indf2	;volatile
  1937  0001E2  4A21               	infsnz	_size,f,c
  1938  0001E4  2A22               	incf	_size+1,f,c
  1939  0001E6  0006               	pop		;# 
  1940  0001E8                     l1096:
  1941  0001E8  50FC               	movf	stkptr,w,c	;volatile
  1942  0001EA  A4D8               	btfss	status,2,c
  1943  0001EC  D770               	goto	l1092
  1944  0001EE  C023  F00B         	movff	_who,btemp+10
  1945  0001F2  C024  F00C         	movff	_who+1,btemp+11
  1946  0001F6  0E6C               	movlw	108
  1947  0001F8  020B               	mulwf	btemp+10,c
  1948  0001FA  CFF3 F009          	movff	prodl,btemp+8
  1949  0001FE  CFF4 F00A          	movff	prodh,btemp+9
  1950  000202  020C               	mulwf	btemp+11,c
  1951  000204  50F3               	movf	prodl,w,c
  1952  000206  260A               	addwf	btemp+9,f,c
  1953  000208  0E46               	movlw	low (_ready_queue+102)
  1954  00020A  2409               	addwf	btemp+8,w,c
  1955  00020C  6ED9               	movwf	fsr2l,c
  1956  00020E  0E02               	movlw	high (_ready_queue+102)
  1957  000210  200A               	addwfc	btemp+9,w,c
  1958  000212  6EDA               	movwf	fsr2h,c
  1959  000214  C021  FFDE         	movff	_size,postinc2
  1960  000218  C022  FFDD         	movff	_size+1,postdec2
  1961                           
  1962                           ;kernel.c: 78:   ready_queue.task_running = scheduler();
  1963  00021C  ECC0  F008         	call	_scheduler	;wreg free
  1964  000220  C001  F3FE         	movff	btemp,_ready_queue+542
  1965  000224  C002  F3FF         	movff	btemp+1,_ready_queue+543
  1966                           
  1967                           ;kernel.c: 80:   { STKPTR = 0; who = ready_queue.task_running; if (ready_queue.tasks[who
      +                          ].task_stack.stack_level == 0) { __asm("PUSH"); TOS = ready_queue.tasks[who].task_f; } e
      +                          lse { ready_queue.tasks[who].task_state = RUNNING; WREG = ready_queue.tasks[who].W_reg; 
      +                          STATUS = ready_queue.tasks[who].STATUS_reg; BSR = ready_queue.tasks[who].BSR_reg; size =
      +                           ready_queue.tasks[who].task_stack.stack_level; while (size) { __asm("PUSH"); TOSL = rea
      +                          dy_queue.tasks[who].task_stack.h_stack[size-1].TOSL_reg; TOSH = ready_queue.tasks[who].t
      +                          ask_stack.h_stack[size-1].TOSH_reg; TOSU = ready_queue.tasks[who].task_stack.h_stack[siz
      +                          e-1].TOSU_reg; size--; } }};
  1968  000228  6AFC               	clrf	stkptr,c	;volatile
  1969  00022A  C3FE  F023         	movff	_ready_queue+542,_who
  1970  00022E  C3FF  F024         	movff	_ready_queue+543,_who+1
  1971  000232  C023  F00B         	movff	_who,btemp+10
  1972  000236  C024  F00C         	movff	_who+1,btemp+11
  1973  00023A  0E6C               	movlw	108
  1974  00023C  020B               	mulwf	btemp+10,c
  1975  00023E  CFF3 F009          	movff	prodl,btemp+8
  1976  000242  CFF4 F00A          	movff	prodh,btemp+9
  1977  000246  020C               	mulwf	btemp+11,c
  1978  000248  50F3               	movf	prodl,w,c
  1979  00024A  260A               	addwf	btemp+9,f,c
  1980  00024C  0E46               	movlw	low (_ready_queue+102)
  1981  00024E  2409               	addwf	btemp+8,w,c
  1982  000250  6ED9               	movwf	fsr2l,c
  1983  000252  0E02               	movlw	high (_ready_queue+102)
  1984  000254  200A               	addwfc	btemp+9,w,c
  1985  000256  6EDA               	movwf	fsr2h,c
  1986  000258  50DE               	movf	postinc2,w,c
  1987  00025A  10DE               	iorwf	postinc2,w,c
  1988  00025C  A4D8               	btfss	status,2,c
  1989  00025E  D01E               	goto	l1112
  1990  000260  0005               	push		;# 
  1991  000262  C023  F00B         	movff	_who,btemp+10
  1992  000266  C024  F00C         	movff	_who+1,btemp+11
  1993  00026A  0E6C               	movlw	108
  1994  00026C  020B               	mulwf	btemp+10,c
  1995  00026E  CFF3 F009          	movff	prodl,btemp+8
  1996  000272  CFF4 F00A          	movff	prodh,btemp+9
  1997  000276  020C               	mulwf	btemp+11,c
  1998  000278  50F3               	movf	prodl,w,c
  1999  00027A  260A               	addwf	btemp+9,f,c
  2000  00027C  0E48               	movlw	low (_ready_queue+104)
  2001  00027E  2409               	addwf	btemp+8,w,c
  2002  000280  6ED9               	movwf	fsr2l,c
  2003  000282  0E02               	movlw	high (_ready_queue+104)
  2004  000284  200A               	addwfc	btemp+9,w,c
  2005  000286  6EDA               	movwf	fsr2h,c
  2006  000288  CFDE F00B          	movff	postinc2,btemp+10
  2007  00028C  CFDD F00C          	movff	postdec2,btemp+11
  2008  000290  C00B  FFFD         	movff	btemp+10,tosl	;volatile
  2009  000294  C00C  FFFE         	movff	btemp+11,tosh	;volatile
  2010  000298  6AFF               	clrf	tosu,c	;volatile
  2011  00029A  D0FF               	goto	u120
  2012  00029C                     l1112:
  2013  00029C  C023  F00B         	movff	_who,btemp+10
  2014  0002A0  C024  F00C         	movff	_who+1,btemp+11
  2015  0002A4  0E6C               	movlw	108
  2016  0002A6  020B               	mulwf	btemp+10,c
  2017  0002A8  CFF3 F009          	movff	prodl,btemp+8
  2018  0002AC  CFF4 F00A          	movff	prodh,btemp+9
  2019  0002B0  020C               	mulwf	btemp+11,c
  2020  0002B2  50F3               	movf	prodl,w,c
  2021  0002B4  260A               	addwf	btemp+9,f,c
  2022  0002B6  0EE8               	movlw	low (_ready_queue+8)
  2023  0002B8  2409               	addwf	btemp+8,w,c
  2024  0002BA  6ED9               	movwf	fsr2l,c
  2025  0002BC  0E01               	movlw	high (_ready_queue+8)
  2026  0002BE  200A               	addwfc	btemp+9,w,c
  2027  0002C0  6EDA               	movwf	fsr2h,c
  2028  0002C2  0E01               	movlw	1
  2029  0002C4  6EDF               	movwf	indf2,c
  2030  0002C6  C023  F00B         	movff	_who,btemp+10
  2031  0002CA  C024  F00C         	movff	_who+1,btemp+11
  2032  0002CE  0E6C               	movlw	108
  2033  0002D0  020B               	mulwf	btemp+10,c
  2034  0002D2  CFF3 F009          	movff	prodl,btemp+8
  2035  0002D6  CFF4 F00A          	movff	prodh,btemp+9
  2036  0002DA  020C               	mulwf	btemp+11,c
  2037  0002DC  50F3               	movf	prodl,w,c
  2038  0002DE  260A               	addwf	btemp+9,f,c
  2039  0002E0  0EE5               	movlw	low (_ready_queue+5)
  2040  0002E2  2409               	addwf	btemp+8,w,c
  2041  0002E4  6ED9               	movwf	fsr2l,c
  2042  0002E6  0E01               	movlw	high (_ready_queue+5)
  2043  0002E8  200A               	addwfc	btemp+9,w,c
  2044  0002EA  6EDA               	movwf	fsr2h,c
  2045  0002EC  50DF               	movf	indf2,w,c
  2046  0002EE  6E0C               	movwf	btemp+11,c
  2047  0002F0  500C               	movf	btemp+11,w,c
  2048  0002F2  C023  F00B         	movff	_who,btemp+10
  2049  0002F6  C024  F00C         	movff	_who+1,btemp+11
  2050  0002FA  0E6C               	movlw	108
  2051  0002FC  020B               	mulwf	btemp+10,c
  2052  0002FE  CFF3 F009          	movff	prodl,btemp+8
  2053  000302  CFF4 F00A          	movff	prodh,btemp+9
  2054  000306  020C               	mulwf	btemp+11,c
  2055  000308  50F3               	movf	prodl,w,c
  2056  00030A  260A               	addwf	btemp+9,f,c
  2057  00030C  0EE6               	movlw	low (_ready_queue+6)
  2058  00030E  2409               	addwf	btemp+8,w,c
  2059  000310  6ED9               	movwf	fsr2l,c
  2060  000312  0E01               	movlw	high (_ready_queue+6)
  2061  000314  200A               	addwfc	btemp+9,w,c
  2062  000316  6EDA               	movwf	fsr2h,c
  2063  000318  50DF               	movf	indf2,w,c
  2064  00031A  6ED8               	movwf	status,c	;volatile
  2065  00031C  C023  F00B         	movff	_who,btemp+10
  2066  000320  C024  F00C         	movff	_who+1,btemp+11
  2067  000324  0E6C               	movlw	108
  2068  000326  020B               	mulwf	btemp+10,c
  2069  000328  CFF3 F009          	movff	prodl,btemp+8
  2070  00032C  CFF4 F00A          	movff	prodh,btemp+9
  2071  000330  020C               	mulwf	btemp+11,c
  2072  000332  50F3               	movf	prodl,w,c
  2073  000334  260A               	addwf	btemp+9,f,c
  2074  000336  0EE7               	movlw	low (_ready_queue+7)
  2075  000338  2409               	addwf	btemp+8,w,c
  2076  00033A  6ED9               	movwf	fsr2l,c
  2077  00033C  0E01               	movlw	high (_ready_queue+7)
  2078  00033E  200A               	addwfc	btemp+9,w,c
  2079  000340  6EDA               	movwf	fsr2h,c
  2080  000342  50DF               	movf	indf2,w,c
  2081  000344  6EE0               	movwf	bsr,c	;volatile
  2082  000346  C023  F00B         	movff	_who,btemp+10
  2083  00034A  C024  F00C         	movff	_who+1,btemp+11
  2084  00034E  0E6C               	movlw	108
  2085  000350  020B               	mulwf	btemp+10,c
  2086  000352  CFF3 F009          	movff	prodl,btemp+8
  2087  000356  CFF4 F00A          	movff	prodh,btemp+9
  2088  00035A  020C               	mulwf	btemp+11,c
  2089  00035C  50F3               	movf	prodl,w,c
  2090  00035E  260A               	addwf	btemp+9,f,c
  2091  000360  0E46               	movlw	low (_ready_queue+102)
  2092  000362  2409               	addwf	btemp+8,w,c
  2093  000364  6ED9               	movwf	fsr2l,c
  2094  000366  0E02               	movlw	high (_ready_queue+102)
  2095  000368  200A               	addwfc	btemp+9,w,c
  2096  00036A  6EDA               	movwf	fsr2h,c
  2097  00036C  CFDE F021          	movff	postinc2,_size
  2098  000370  CFDD F022          	movff	postdec2,_size+1
  2099  000374  D08E               	goto	l1118
  2100  000376                     l98:
  2101  000376  0005               	push		;# 
  2102  000378  C021  F00B         	movff	_size,btemp+10
  2103  00037C  C022  F00C         	movff	_size+1,btemp+11
  2104  000380  0E03               	movlw	3
  2105  000382  020B               	mulwf	btemp+10,c
  2106  000384  CFF3 F009          	movff	prodl,btemp+8
  2107  000388  CFF4 F00A          	movff	prodh,btemp+9
  2108  00038C  020C               	mulwf	btemp+11,c
  2109  00038E  50F3               	movf	prodl,w,c
  2110  000390  260A               	addwf	btemp+9,f,c
  2111  000392  C023  F00B         	movff	_who,btemp+10
  2112  000396  C024  F00C         	movff	_who+1,btemp+11
  2113  00039A  0E6C               	movlw	108
  2114  00039C  020B               	mulwf	btemp+10,c
  2115  00039E  CFF3 F007          	movff	prodl,btemp+6
  2116  0003A2  CFF4 F008          	movff	prodh,btemp+7
  2117  0003A6  020C               	mulwf	btemp+11,c
  2118  0003A8  50F3               	movf	prodl,w,c
  2119  0003AA  2608               	addwf	btemp+7,f,c
  2120  0003AC  0EE0               	movlw	low _ready_queue
  2121  0003AE  6E0B               	movwf	btemp+10,c
  2122  0003B0  0E01               	movlw	high _ready_queue
  2123  0003B2  6E0C               	movwf	btemp+11,c
  2124  0003B4  0E07               	movlw	7
  2125  0003B6  260B               	addwf	btemp+10,f,c
  2126  0003B8  0E00               	movlw	0
  2127  0003BA  220C               	addwfc	btemp+11,f,c
  2128  0003BC  5007               	movf	btemp+6,w,c
  2129  0003BE  260B               	addwf	btemp+10,f,c
  2130  0003C0  5008               	movf	btemp+7,w,c
  2131  0003C2  220C               	addwfc	btemp+11,f,c
  2132  0003C4  5009               	movf	btemp+8,w,c
  2133  0003C6  240B               	addwf	btemp+10,w,c
  2134  0003C8  6ED9               	movwf	fsr2l,c
  2135  0003CA  500A               	movf	btemp+9,w,c
  2136  0003CC  200C               	addwfc	btemp+11,w,c
  2137  0003CE  6EDA               	movwf	fsr2h,c
  2138  0003D0  50DF               	movf	indf2,w,c
  2139  0003D2  6EFD               	movwf	tosl,c	;volatile
  2140  0003D4  C021  F00B         	movff	_size,btemp+10
  2141  0003D8  C022  F00C         	movff	_size+1,btemp+11
  2142  0003DC  0E03               	movlw	3
  2143  0003DE  020B               	mulwf	btemp+10,c
  2144  0003E0  CFF3 F009          	movff	prodl,btemp+8
  2145  0003E4  CFF4 F00A          	movff	prodh,btemp+9
  2146  0003E8  020C               	mulwf	btemp+11,c
  2147  0003EA  50F3               	movf	prodl,w,c
  2148  0003EC  260A               	addwf	btemp+9,f,c
  2149  0003EE  C023  F00B         	movff	_who,btemp+10
  2150  0003F2  C024  F00C         	movff	_who+1,btemp+11
  2151  0003F6  0E6C               	movlw	108
  2152  0003F8  020B               	mulwf	btemp+10,c
  2153  0003FA  CFF3 F007          	movff	prodl,btemp+6
  2154  0003FE  CFF4 F008          	movff	prodh,btemp+7
  2155  000402  020C               	mulwf	btemp+11,c
  2156  000404  50F3               	movf	prodl,w,c
  2157  000406  2608               	addwf	btemp+7,f,c
  2158  000408  0EE0               	movlw	low _ready_queue
  2159  00040A  6E0B               	movwf	btemp+10,c
  2160  00040C  0E01               	movlw	high _ready_queue
  2161  00040E  6E0C               	movwf	btemp+11,c
  2162  000410  0E08               	movlw	8
  2163  000412  260B               	addwf	btemp+10,f,c
  2164  000414  0E00               	movlw	0
  2165  000416  220C               	addwfc	btemp+11,f,c
  2166  000418  5007               	movf	btemp+6,w,c
  2167  00041A  260B               	addwf	btemp+10,f,c
  2168  00041C  5008               	movf	btemp+7,w,c
  2169  00041E  220C               	addwfc	btemp+11,f,c
  2170  000420  5009               	movf	btemp+8,w,c
  2171  000422  240B               	addwf	btemp+10,w,c
  2172  000424  6ED9               	movwf	fsr2l,c
  2173  000426  500A               	movf	btemp+9,w,c
  2174  000428  200C               	addwfc	btemp+11,w,c
  2175  00042A  6EDA               	movwf	fsr2h,c
  2176  00042C  50DF               	movf	indf2,w,c
  2177  00042E  6EFE               	movwf	tosh,c	;volatile
  2178  000430  C021  F00B         	movff	_size,btemp+10
  2179  000434  C022  F00C         	movff	_size+1,btemp+11
  2180  000438  0E03               	movlw	3
  2181  00043A  020B               	mulwf	btemp+10,c
  2182  00043C  CFF3 F009          	movff	prodl,btemp+8
  2183  000440  CFF4 F00A          	movff	prodh,btemp+9
  2184  000444  020C               	mulwf	btemp+11,c
  2185  000446  50F3               	movf	prodl,w,c
  2186  000448  260A               	addwf	btemp+9,f,c
  2187  00044A  C023  F00B         	movff	_who,btemp+10
  2188  00044E  C024  F00C         	movff	_who+1,btemp+11
  2189  000452  0E6C               	movlw	108
  2190  000454  020B               	mulwf	btemp+10,c
  2191  000456  CFF3 F007          	movff	prodl,btemp+6
  2192  00045A  CFF4 F008          	movff	prodh,btemp+7
  2193  00045E  020C               	mulwf	btemp+11,c
  2194  000460  50F3               	movf	prodl,w,c
  2195  000462  2608               	addwf	btemp+7,f,c
  2196  000464  0EE0               	movlw	low _ready_queue
  2197  000466  6E0B               	movwf	btemp+10,c
  2198  000468  0E01               	movlw	high _ready_queue
  2199  00046A  6E0C               	movwf	btemp+11,c
  2200  00046C  0E06               	movlw	6
  2201  00046E  260B               	addwf	btemp+10,f,c
  2202  000470  0E00               	movlw	0
  2203  000472  220C               	addwfc	btemp+11,f,c
  2204  000474  5007               	movf	btemp+6,w,c
  2205  000476  260B               	addwf	btemp+10,f,c
  2206  000478  5008               	movf	btemp+7,w,c
  2207  00047A  220C               	addwfc	btemp+11,f,c
  2208  00047C  5009               	movf	btemp+8,w,c
  2209  00047E  240B               	addwf	btemp+10,w,c
  2210  000480  6ED9               	movwf	fsr2l,c
  2211  000482  500A               	movf	btemp+9,w,c
  2212  000484  200C               	addwfc	btemp+11,w,c
  2213  000486  6EDA               	movwf	fsr2h,c
  2214  000488  50DF               	movf	indf2,w,c
  2215  00048A  6EFF               	movwf	tosu,c	;volatile
  2216  00048C  0621               	decf	_size,f,c
  2217  00048E  A0D8               	btfss	status,0,c
  2218  000490  0622               	decf	_size+1,f,c
  2219  000492                     l1118:
  2220  000492  5021               	movf	_size,w,c
  2221  000494  1022               	iorwf	_size+1,w,c
  2222  000496  A4D8               	btfss	status,2,c
  2223  000498  D76E               	goto	l98
  2224  00049A                     u120:
  2225                           
  2226                           ;kernel.c: 82:   INTCONbits.GIE = 1;
  2227  00049A  8EF2               	bsf	4082,7,c	;volatile
  2228                           
  2229                           ; _dispatcher: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2230  00049C  52E5               	movf	postdec1,f,c
  2231  00049E  0012               	return		;funcret
  2232  0004A0                     __end_of_dispatcher:
  2233                           	opt callstack 0
  2234                           
  2235 ;; *************** function _scheduler *****************
  2236 ;; Defined at:
  2237 ;;		line 65 in file "kernel.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;		None
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;		None
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  2  [STACK] unsigned int 
  2244 ;; Registers used:
  2245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2251 ;;      Params:         0       0       0       0       0       0       0
  2252 ;;      Locals:         0       0       0       0       0       0       0
  2253 ;;      Temps:          0       0       0       0       0       0       0
  2254 ;;      Totals:         0       0       0       0       0       0       0
  2255 ;;Total ram usage:        0 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:   11
  2258 ;; This function calls:
  2259 ;;		_priority
  2260 ;; This function is called by:
  2261 ;;		_dispatcher
  2262 ;; This function uses a reentrant model
  2263 ;;
  2264                           
  2265                           	psect	text12
  2266  001180                     __ptext12:
  2267                           	opt callstack 0
  2268  001180                     _scheduler:
  2269                           	opt callstack 8
  2270                           
  2271                           ;kernel.c: 69:   return priority();
  2272                           
  2273                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2274                           ;incstack = 0
  2275  001180  ECC8  F003         	call	_priority	;wreg free
  2276                           
  2277                           ; _scheduler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  2278  001184  0012               	return		;funcret
  2279  001186                     __end_of_scheduler:
  2280                           	opt callstack 0
  2281                           
  2282 ;; *************** function _priority *****************
  2283 ;; Defined at:
  2284 ;;		line 95 in file "kernel.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;		None
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;  i               2  [STACK] int 
  2289 ;;  maior_index     2  [STACK] int 
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  2  [STACK] unsigned int 
  2292 ;; Registers used:
  2293 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2299 ;;      Params:         0       0       0       0       0       0       0
  2300 ;;      Locals:         0       0       0       0       0       0       0
  2301 ;;      Temps:          0       0       0       0       0       0       0
  2302 ;;      Totals:         0       0       0       0       0       0       0
  2303 ;;Total ram usage:        0 bytes
  2304 ;; Hardware stack levels used:    1
  2305 ;; Hardware stack levels required when called:   10
  2306 ;; This function calls:
  2307 ;;		Nothing
  2308 ;; This function is called by:
  2309 ;;		_scheduler
  2310 ;; This function uses a reentrant model
  2311 ;;
  2312                           
  2313                           	psect	text13
  2314  000790                     __ptext13:
  2315                           	opt callstack 0
  2316  000790                     _priority:
  2317                           	opt callstack 0
  2318                           
  2319                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2320  000790  52E6               	movf	postinc1,f,c
  2321  000792  52E6               	movf	postinc1,f,c
  2322  000794  52E6               	movf	postinc1,f,c
  2323  000796  52E6               	movf	postinc1,f,c
  2324                           
  2325                           ;kernel.c: 96:   int i, maior_index = 0;
  2326                           ;stkvar	_maior_index @ sp[(-4)+2]
  2327                           
  2328                           ;incstack = 0
  2329  000798  0EFE               	movlw	-2
  2330  00079A  6AE3               	clrf	plusw1,c
  2331  00079C  0EFF               	movlw	-1
  2332  00079E  6AE3               	clrf	plusw1,c
  2333                           
  2334                           ;kernel.c: 97:   for (i = 1; i < ready_queue.tasks_installed; i++) {
  2335  0007A0  0E01               	movlw	1
  2336  0007A2  6E0B               	movwf	btemp+10,c
  2337  0007A4  0E00               	movlw	0
  2338  0007A6  6E0C               	movwf	btemp+11,c
  2339                           
  2340                           ;stkvar	_i @ sp[(-4)+0]
  2341  0007A8  0EFC               	movlw	-4
  2342  0007AA  C00B  FFE3         	movff	btemp+10,plusw1
  2343  0007AE  0EFD               	movlw	-3
  2344  0007B0  C00C  FFE3         	movff	btemp+11,plusw1
  2345  0007B4  D063               	goto	l1004
  2346  0007B6                     l996:
  2347                           
  2348                           ;kernel.c: 98:     if (ready_queue.tasks[maior_index].task_prior <
  2349                           ;stkvar	_i @ sp[(-4)+0]
  2350  0007B6  0EFC               	movlw	-4
  2351  0007B8  CFE3 F00B          	movff	plusw1,btemp+10
  2352  0007BC  0EFD               	movlw	-3
  2353  0007BE  CFE3 F00C          	movff	plusw1,btemp+11
  2354  0007C2  0E6C               	movlw	108
  2355  0007C4  020B               	mulwf	btemp+10,c
  2356  0007C6  CFF3 F009          	movff	prodl,btemp+8
  2357  0007CA  CFF4 F00A          	movff	prodh,btemp+9
  2358  0007CE  020C               	mulwf	btemp+11,c
  2359  0007D0  50F3               	movf	prodl,w,c
  2360  0007D2  260A               	addwf	btemp+9,f,c
  2361  0007D4  0EE2               	movlw	low (_ready_queue+2)
  2362  0007D6  2409               	addwf	btemp+8,w,c
  2363  0007D8  6ED9               	movwf	fsr2l,c
  2364  0007DA  0E01               	movlw	high (_ready_queue+2)
  2365  0007DC  200A               	addwfc	btemp+9,w,c
  2366  0007DE  6EDA               	movwf	fsr2h,c
  2367                           
  2368                           ;stkvar	_maior_index @ sp[(-4)+2]
  2369  0007E0  0EFE               	movlw	-2
  2370  0007E2  CFE3 F00B          	movff	plusw1,btemp+10
  2371  0007E6  0EFF               	movlw	-1
  2372  0007E8  CFE3 F00C          	movff	plusw1,btemp+11
  2373  0007EC  0E6C               	movlw	108
  2374  0007EE  020B               	mulwf	btemp+10,c
  2375  0007F0  CFF3 F009          	movff	prodl,btemp+8
  2376  0007F4  CFF4 F00A          	movff	prodh,btemp+9
  2377  0007F8  020C               	mulwf	btemp+11,c
  2378  0007FA  50F3               	movf	prodl,w,c
  2379  0007FC  260A               	addwf	btemp+9,f,c
  2380  0007FE  0EE2               	movlw	low (_ready_queue+2)
  2381  000800  2409               	addwf	btemp+8,w,c
  2382  000802  6EE9               	movwf	fsr0l,c
  2383  000804  0E01               	movlw	high (_ready_queue+2)
  2384  000806  200A               	addwfc	btemp+9,w,c
  2385  000808  6EEA               	movwf	fsr0h,c
  2386  00080A  50DE               	movf	postinc2,w,c
  2387  00080C  5CEE               	subwf	postinc0,w,c
  2388  00080E  50DE               	movf	postinc2,w,c
  2389  000810  58EE               	subwfb	postinc0,w,c
  2390  000812  B0D8               	btfsc	status,0,c
  2391  000814  D024               	goto	l1002
  2392                           
  2393                           ;stkvar	_i @ sp[(-4)+0]
  2394  000816  0EFC               	movlw	-4
  2395  000818  CFE3 F00B          	movff	plusw1,btemp+10
  2396  00081C  0EFD               	movlw	-3
  2397  00081E  CFE3 F00C          	movff	plusw1,btemp+11
  2398  000822  0E6C               	movlw	108
  2399  000824  020B               	mulwf	btemp+10,c
  2400  000826  CFF3 F009          	movff	prodl,btemp+8
  2401  00082A  CFF4 F00A          	movff	prodh,btemp+9
  2402  00082E  020C               	mulwf	btemp+11,c
  2403  000830  50F3               	movf	prodl,w,c
  2404  000832  260A               	addwf	btemp+9,f,c
  2405  000834  0EE8               	movlw	low (_ready_queue+8)
  2406  000836  2409               	addwf	btemp+8,w,c
  2407  000838  6ED9               	movwf	fsr2l,c
  2408  00083A  0E01               	movlw	high (_ready_queue+8)
  2409  00083C  200A               	addwfc	btemp+9,w,c
  2410  00083E  6EDA               	movwf	fsr2h,c
  2411  000840  50DF               	movf	indf2,w,c
  2412  000842  A4D8               	btfss	status,2,c
  2413  000844  D00C               	goto	l1002
  2414                           
  2415                           ;kernel.c: 100:         ready_queue.tasks[i].task_state == READY) {;kernel.c: 101:      
      +                           maior_index = i;
  2416                           ;stkvar	_i @ sp[(-4)+0]
  2417                           ;stkvar	_maior_index @ sp[(-4)+2]
  2418  000846  0EFC               	movlw	-4
  2419  000848  CFE3 F001          	movff	plusw1,btemp
  2420  00084C  0EFE               	movlw	-2
  2421  00084E  C001  FFE3         	movff	btemp,plusw1
  2422  000852  0EFD               	movlw	-3
  2423  000854  CFE3 F001          	movff	plusw1,btemp
  2424  000858  0EFF               	movlw	-1
  2425  00085A  C001  FFE3         	movff	btemp,plusw1
  2426  00085E                     l1002:
  2427                           
  2428                           ;kernel.c: 103:   }
  2429                           ;stkvar	_i @ sp[(-4)+0]
  2430  00085E  0EFC               	movlw	-4
  2431  000860  50E3               	movf	plusw1,w,c
  2432  000862  0F01               	addlw	1
  2433  000864  6E01               	movwf	btemp,c
  2434  000866  0EFC               	movlw	-4
  2435  000868  C001  FFE3         	movff	btemp,plusw1
  2436  00086C  6A01               	clrf	btemp,c
  2437  00086E  0EFD               	movlw	-3
  2438  000870  50E3               	movf	plusw1,w,c
  2439  000872  2001               	addwfc	btemp,w,c
  2440  000874  6E01               	movwf	btemp,c
  2441  000876  0EFD               	movlw	-3
  2442  000878  C001  FFE3         	movff	btemp,plusw1
  2443  00087C                     l1004:
  2444  00087C  EE23  F0FC         	lfsr	2,_ready_queue+540
  2445                           
  2446                           ;stkvar	_i @ sp[(-4)+0]
  2447  000880  0EFC               	movlw	-4
  2448  000882  CFE3 F001          	movff	plusw1,btemp
  2449  000886  50DE               	movf	postinc2,w,c
  2450  000888  5C01               	subwf	btemp,w,c
  2451  00088A  0EFD               	movlw	-3
  2452  00088C  CFE3 F001          	movff	plusw1,btemp
  2453  000890  50DE               	movf	postinc2,w,c
  2454  000892  5801               	subwfb	btemp,w,c
  2455  000894  A0D8               	btfss	status,0,c
  2456  000896  D78F               	goto	l996
  2457                           
  2458                           ;kernel.c: 105:   return maior_index;
  2459                           ;stkvar	_maior_index @ sp[(-4)+2]
  2460  000898  0EFE               	movlw	-2
  2461  00089A  CFE3 F001          	movff	plusw1,btemp
  2462  00089E  0EFF               	movlw	-1
  2463  0008A0  CFE3 F002          	movff	plusw1,btemp+1
  2464                           
  2465                           ; _priority: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  2466  0008A4  52E5               	movf	postdec1,f,c
  2467  0008A6  52E5               	movf	postdec1,f,c
  2468  0008A8  52E5               	movf	postdec1,f,c
  2469  0008AA  52E5               	movf	postdec1,f,c
  2470  0008AC  0012               	return		;funcret
  2471  0008AE                     __end_of_priority:
  2472                           	opt callstack 0
  2473                           
  2474 ;; *************** function _config_timer0 *****************
  2475 ;; Defined at:
  2476 ;;		line 23 in file "int0_test.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;		None
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;		None
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  1  [STACK] void 
  2483 ;; Registers used:
  2484 ;;		wreg, status,2
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2490 ;;      Params:         0       0       0       0       0       0       0
  2491 ;;      Locals:         0       0       0       0       0       0       0
  2492 ;;      Temps:          0       0       0       0       0       0       0
  2493 ;;      Totals:         0       0       0       0       0       0       0
  2494 ;;Total ram usage:        0 bytes
  2495 ;; Hardware stack levels used:    1
  2496 ;; Hardware stack levels required when called:   10
  2497 ;; This function calls:
  2498 ;;		Nothing
  2499 ;; This function is called by:
  2500 ;;		_main
  2501 ;; This function uses a reentrant model
  2502 ;;
  2503                           
  2504                           	psect	text14
  2505  001148                     __ptext14:
  2506                           	opt callstack 0
  2507  001148                     _config_timer0:
  2508                           	opt callstack 20
  2509                           
  2510                           ;int0_test.c: 28:   T0CONbits.T0CS = 0;
  2511                           
  2512                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2513                           ;incstack = 0
  2514  001148  9AD5               	bcf	4053,5,c	;volatile
  2515                           
  2516                           ;int0_test.c: 29:   T0CONbits.PSA = 0;
  2517  00114A  96D5               	bcf	4053,3,c	;volatile
  2518                           
  2519                           ;int0_test.c: 30:   T0CONbits.T0PS = 0b111;
  2520  00114C  0E07               	movlw	7
  2521  00114E  12D5               	iorwf	4053,f,c	;volatile
  2522                           
  2523                           ;int0_test.c: 31:   INTCONbits.PEIE = 1;
  2524  001150  8CF2               	bsf	4082,6,c	;volatile
  2525                           
  2526                           ;int0_test.c: 32:   INTCONbits.TMR0IE = 1;
  2527  001152  8AF2               	bsf	4082,5,c	;volatile
  2528                           
  2529                           ;int0_test.c: 33:   TMR0L = 252;
  2530  001154  0EFC               	movlw	252
  2531  001156  6ED6               	movwf	4054,c	;volatile
  2532                           
  2533                           ; _config_timer0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  2534  001158  0012               	return		;funcret
  2535  00115A                     __end_of_config_timer0:
  2536                           	opt callstack 0
  2537                           
  2538 ;; *************** function _config_INT0 *****************
  2539 ;; Defined at:
  2540 ;;		line 13 in file "int0_test.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;		None
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1  [STACK] void 
  2547 ;; Registers used:
  2548 ;;		None
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2554 ;;      Params:         0       0       0       0       0       0       0
  2555 ;;      Locals:         0       0       0       0       0       0       0
  2556 ;;      Temps:          0       0       0       0       0       0       0
  2557 ;;      Totals:         0       0       0       0       0       0       0
  2558 ;;Total ram usage:        0 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; Hardware stack levels required when called:   10
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_main
  2565 ;; This function uses a reentrant model
  2566 ;;
  2567                           
  2568                           	psect	text15
  2569  00115A                     __ptext15:
  2570                           	opt callstack 0
  2571  00115A                     _config_INT0:
  2572                           	opt callstack 20
  2573                           
  2574                           ;int0_test.c: 14:   TRISDbits.RD0 = 0;
  2575                           
  2576                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2577                           ;incstack = 0
  2578  00115A  9095               	bcf	3989,0,c	;volatile
  2579                           
  2580                           ;int0_test.c: 15:   INTCONbits.GIE = 1;
  2581  00115C  8EF2               	bsf	4082,7,c	;volatile
  2582                           
  2583                           ;int0_test.c: 16:   INTCONbits.INT0E = 1;
  2584  00115E  88F2               	bsf	4082,4,c	;volatile
  2585                           
  2586                           ;int0_test.c: 17:   INTCONbits.INT0IE = 1;
  2587  001160  88F2               	bsf	4082,4,c	;volatile
  2588                           
  2589                           ;int0_test.c: 18:   INTCONbits.INT0IF = 0;
  2590  001162  92F2               	bcf	4082,1,c	;volatile
  2591                           
  2592                           ;int0_test.c: 19:   INTCON2bits.RBPU = 0;
  2593  001164  9EF1               	bcf	4081,7,c	;volatile
  2594                           
  2595                           ;int0_test.c: 20:   INTCON2bits.INTEDG0 = 0;
  2596  001166  9CF1               	bcf	4081,6,c	;volatile
  2597                           
  2598                           ; _config_INT0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  2599  001168  0012               	return		;funcret
  2600  00116A                     __end_of_config_INT0:
  2601                           	opt callstack 0
  2602                           
  2603 ;; *************** function _task_idle *****************
  2604 ;; Defined at:
  2605 ;;		line 124 in file "kernel.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;		None
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;		None
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1  [STACK] void 
  2612 ;; Registers used:
  2613 ;;		None
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2619 ;;      Params:         0       0       0       0       0       0       0
  2620 ;;      Locals:         0       0       0       0       0       0       0
  2621 ;;      Temps:          0       0       0       0       0       0       0
  2622 ;;      Totals:         0       0       0       0       0       0       0
  2623 ;;Total ram usage:        0 bytes
  2624 ;; Hardware stack levels used:    1
  2625 ;; Hardware stack levels required when called:    5
  2626 ;; This function calls:
  2627 ;;		Nothing
  2628 ;; This function is called by:
  2629 ;;		_lunos_init
  2630 ;; This function uses a reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text16
  2634  001186                     __ptext16:
  2635                           	opt callstack 0
  2636  001186                     _task_idle:
  2637                           	opt callstack 22
  2638                           
  2639                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2640                           ;incstack = 0
  2641                           ;kernel.c: 126:   while (1) __nop();
  2642  001186  F000               	nop	
  2643  001188  D7FE               	goto	_task_idle
  2644  00118A                     __end_of_task_idle:
  2645                           	opt callstack 0
  2646                           
  2647 ;; *************** function _task_0 *****************
  2648 ;; Defined at:
  2649 ;;		line 39 in file "tasks.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;		None
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;		None
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  1  [STACK] void 
  2656 ;; Registers used:
  2657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2663 ;;      Params:         0       0       0       0       0       0       0
  2664 ;;      Locals:         0       0       0       0       0       0       0
  2665 ;;      Temps:          0       0       0       0       0       0       0
  2666 ;;      Totals:         0       0       0       0       0       0       0
  2667 ;;Total ram usage:        0 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; Hardware stack levels required when called:    9
  2670 ;; This function calls:
  2671 ;;		_lunos_delayTask
  2672 ;;		_pipe_write
  2673 ;; This function is called by:
  2674 ;;		_main
  2675 ;; This function uses a reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text17
  2679  00104C                     __ptext17:
  2680                           	opt callstack 0
  2681  00104C                     _task_0:
  2682                           	opt callstack 18
  2683                           
  2684                           ;tasks.c: 41:         pipe_write(&p, 1);
  2685                           
  2686                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2687                           ;incstack = 0
  2688                           ;tasks.c: 40:     for (;;) {
  2689  00104C  0E01               	movlw	1
  2690  00104E  6EE6               	movwf	postinc1,c
  2691  001050  0E00               	movlw	0
  2692  001052  6EE6               	movwf	postinc1,c
  2693  001054  0E33               	movlw	low _p
  2694  001056  6EE6               	movwf	postinc1,c
  2695  001058  0E00               	movlw	high _p
  2696  00105A  6EE6               	movwf	postinc1,c
  2697  00105C  ECE3  F004         	call	_pipe_write	;wreg free
  2698                           
  2699                           ;tasks.c: 45:         PORTBbits.RB3 = ~PORTBbits.RB3;
  2700  001060  A681               	btfss	3969,3,c	;volatile
  2701  001062  D002               	goto	u29_20
  2702  001064  0E01               	movlw	1
  2703  001066  D001               	goto	u29_26
  2704  001068                     u29_20:
  2705  001068  0E00               	movlw	0
  2706  00106A                     u29_26:
  2707  00106A  0AFF               	xorlw	255
  2708  00106C  6E0C               	movwf	btemp+11,c
  2709  00106E  460C               	rlncf	btemp+11,f,c
  2710  001070  460C               	rlncf	btemp+11,f,c
  2711  001072  460C               	rlncf	btemp+11,f,c
  2712  001074  5081               	movf	3969,w,c	;volatile
  2713  001076  180C               	xorwf	btemp+11,w,c
  2714  001078  0BF7               	andlw	-9
  2715  00107A  180C               	xorwf	btemp+11,w,c
  2716  00107C  6E81               	movwf	3969,c	;volatile
  2717                           
  2718                           ;tasks.c: 46:         lunos_delayTask(1000);
  2719  00107E  0EE8               	movlw	232
  2720  001080  6EE6               	movwf	postinc1,c
  2721  001082  0E03               	movlw	3
  2722  001084  6EE6               	movwf	postinc1,c
  2723  001086  ECFD  F007         	call	_lunos_delayTask	;wreg free
  2724                           
  2725                           ;tasks.c: 47:     }
  2726  00108A  D7E0               	goto	_task_0
  2727  00108C                     __end_of_task_0:
  2728                           	opt callstack 0
  2729                           
  2730 ;; *************** function _pipe_write *****************
  2731 ;; Defined at:
  2732 ;;		line 16 in file "pipe.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;  p               2  [STACK] PTR struct pipe
  2735 ;;		 -> p(12), 
  2736 ;;  data            2  [STACK] unsigned int 
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;		None
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  1  [STACK] void 
  2741 ;; Registers used:
  2742 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2748 ;;      Params:         0       0       0       0       0       0       0
  2749 ;;      Locals:         0       0       0       0       0       0       0
  2750 ;;      Temps:          0       0       0       0       0       0       0
  2751 ;;      Totals:         0       0       0       0       0       0       0
  2752 ;;Total ram usage:        0 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; Hardware stack levels required when called:    5
  2755 ;; This function calls:
  2756 ;;		Nothing
  2757 ;; This function is called by:
  2758 ;;		_task_0
  2759 ;;		_task_1
  2760 ;; This function uses a reentrant model
  2761 ;;
  2762                           
  2763                           	psect	text18
  2764  0009C6                     __ptext18:
  2765                           	opt callstack 0
  2766  0009C6                     _pipe_write:
  2767                           	opt callstack 21
  2768                           
  2769                           ;pipe.c: 17:   INTCONbits.GIE = 0;
  2770                           
  2771                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2772                           ;incstack = 0
  2773  0009C6  9EF2               	bcf	4082,7,c	;volatile
  2774                           
  2775                           ;pipe.c: 21:   if (p->p_size < 2) {
  2776                           ;stkvar	_p @ sp[(0)+-2]
  2777  0009C8  0EFE               	movlw	-2
  2778  0009CA  CFE3 F00B          	movff	plusw1,btemp+10
  2779  0009CE  0EFF               	movlw	-1
  2780  0009D0  CFE3 F00C          	movff	plusw1,btemp+11
  2781  0009D4  0E08               	movlw	8
  2782  0009D6  240B               	addwf	btemp+10,w,c
  2783  0009D8  6ED9               	movwf	fsr2l,c
  2784  0009DA  0E00               	movlw	0
  2785  0009DC  200C               	addwfc	btemp+11,w,c
  2786  0009DE  6EDA               	movwf	fsr2h,c
  2787  0009E0  0E01               	movlw	1
  2788  0009E2  50DB               	movf	plusw2,w,c
  2789  0009E4  E167               	bnz	l1268
  2790  0009E6  0E02               	movlw	2
  2791  0009E8  5CDE               	subwf	postinc2,w,c
  2792  0009EA  B0D8               	btfsc	status,0,c
  2793  0009EC  D063               	goto	l1268
  2794                           
  2795                           ;pipe.c: 22:     p->pipe_data[p->index_write] = data;
  2796                           ;stkvar	_data @ sp[(0)+-4]
  2797  0009EE  50E1               	movf	fsr1l,w,c
  2798  0009F0  0FFC               	addlw	-4
  2799  0009F2  6ED9               	movwf	fsr2l,c
  2800  0009F4  50E2               	movf	fsr1h,w,c
  2801  0009F6  6EDA               	movwf	fsr2h,c
  2802  0009F8  0EFF               	movlw	255
  2803  0009FA  22DA               	addwfc	fsr2h,f,c
  2804                           
  2805                           ;stkvar	_p @ sp[(0)+-2]
  2806  0009FC  0EFE               	movlw	-2
  2807  0009FE  CFE3 F00B          	movff	plusw1,btemp+10
  2808  000A02  0EFF               	movlw	-1
  2809  000A04  CFE3 F00C          	movff	plusw1,btemp+11
  2810  000A08  0E04               	movlw	4
  2811  000A0A  240B               	addwf	btemp+10,w,c
  2812  000A0C  6EE9               	movwf	fsr0l,c
  2813  000A0E  0E00               	movlw	0
  2814  000A10  200C               	addwfc	btemp+11,w,c
  2815  000A12  6EEA               	movwf	fsr0h,c
  2816  000A14  CFEE F00B          	movff	postinc0,btemp+10
  2817  000A18  CFED F00C          	movff	postdec0,btemp+11
  2818  000A1C  90D8               	bcf	status,0,c
  2819  000A1E  340B               	rlcf	btemp+10,w,c
  2820  000A20  6E09               	movwf	btemp+8,c
  2821  000A22  340C               	rlcf	btemp+11,w,c
  2822  000A24  6E0A               	movwf	btemp+9,c
  2823                           
  2824                           ;stkvar	_p @ sp[(0)+-2]
  2825  000A26  0EFE               	movlw	-2
  2826  000A28  CFE3 F00B          	movff	plusw1,btemp+10
  2827  000A2C  0EFF               	movlw	-1
  2828  000A2E  CFE3 F00C          	movff	plusw1,btemp+11
  2829  000A32  5009               	movf	btemp+8,w,c
  2830  000A34  240B               	addwf	btemp+10,w,c
  2831  000A36  6EE9               	movwf	fsr0l,c
  2832  000A38  500A               	movf	btemp+9,w,c
  2833  000A3A  200C               	addwfc	btemp+11,w,c
  2834  000A3C  6EEA               	movwf	fsr0h,c
  2835  000A3E  CFDE FFEE          	movff	postinc2,postinc0
  2836  000A42  CFDD FFED          	movff	postdec2,postdec0
  2837                           
  2838                           ;pipe.c: 23:     p->index_write = (p->index_write + 1) % 2;
  2839                           ;stkvar	_p @ sp[(0)+-2]
  2840  000A46  0EFE               	movlw	-2
  2841  000A48  CFE3 F00B          	movff	plusw1,btemp+10
  2842  000A4C  0EFF               	movlw	-1
  2843  000A4E  CFE3 F00C          	movff	plusw1,btemp+11
  2844  000A52  0E04               	movlw	4
  2845  000A54  240B               	addwf	btemp+10,w,c
  2846  000A56  6ED9               	movwf	fsr2l,c
  2847  000A58  0E00               	movlw	0
  2848  000A5A  200C               	addwfc	btemp+11,w,c
  2849  000A5C  6EDA               	movwf	fsr2h,c
  2850  000A5E  CFDE F00B          	movff	postinc2,btemp+10
  2851  000A62  CFDD F00C          	movff	postdec2,btemp+11
  2852  000A66  0E01               	movlw	1
  2853  000A68  260B               	addwf	btemp+10,f,c
  2854  000A6A  0E00               	movlw	0
  2855  000A6C  220C               	addwfc	btemp+11,f,c
  2856  000A6E  0E01               	movlw	1
  2857  000A70  160B               	andwf	btemp+10,f,c
  2858  000A72  0E00               	movlw	0
  2859  000A74  160C               	andwf	btemp+11,f,c
  2860                           
  2861                           ;stkvar	_p @ sp[(0)+-2]
  2862  000A76  0EFE               	movlw	-2
  2863  000A78  CFE3 F009          	movff	plusw1,btemp+8
  2864  000A7C  0EFF               	movlw	-1
  2865  000A7E  CFE3 F00A          	movff	plusw1,btemp+9
  2866  000A82  0E04               	movlw	4
  2867  000A84  2409               	addwf	btemp+8,w,c
  2868  000A86  6ED9               	movwf	fsr2l,c
  2869  000A88  0E00               	movlw	0
  2870  000A8A  200A               	addwfc	btemp+9,w,c
  2871  000A8C  6EDA               	movwf	fsr2h,c
  2872  000A8E  C00B  FFDE         	movff	btemp+10,postinc2
  2873  000A92  C00C  FFDD         	movff	btemp+11,postdec2
  2874                           
  2875                           ;pipe.c: 24:     p->p_size++;
  2876                           ;stkvar	_p @ sp[(0)+-2]
  2877  000A96  0EFE               	movlw	-2
  2878  000A98  CFE3 F00B          	movff	plusw1,btemp+10
  2879  000A9C  0EFF               	movlw	-1
  2880  000A9E  CFE3 F00C          	movff	plusw1,btemp+11
  2881  000AA2  0E08               	movlw	8
  2882  000AA4  240B               	addwf	btemp+10,w,c
  2883  000AA6  6ED9               	movwf	fsr2l,c
  2884  000AA8  0E00               	movlw	0
  2885  000AAA  200C               	addwfc	btemp+11,w,c
  2886  000AAC  6EDA               	movwf	fsr2h,c
  2887  000AAE  2ADE               	incf	postinc2,f,c
  2888  000AB0  0E00               	movlw	0
  2889  000AB2  22DD               	addwfc	postdec2,f,c
  2890  000AB4                     l1268:
  2891                           
  2892                           ;pipe.c: 35:   INTCONbits.GIE = 1;
  2893  000AB4  8EF2               	bsf	4082,7,c	;volatile
  2894                           
  2895                           ; _pipe_write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, ar
      +                          gsize = 4, vargsize = 0
  2896  000AB6  52E5               	movf	postdec1,f,c
  2897  000AB8  52E5               	movf	postdec1,f,c
  2898  000ABA  52E5               	movf	postdec1,f,c
  2899  000ABC  52E5               	movf	postdec1,f,c
  2900  000ABE  0012               	return		;funcret
  2901  000AC0                     __end_of_pipe_write:
  2902                           	opt callstack 0
  2903                           
  2904 ;; *************** function _lunos_delayTask *****************
  2905 ;; Defined at:
  2906 ;;		line 38 in file "kernel.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;  time            2  [STACK] unsigned int 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;		None
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1  [STACK] void 
  2913 ;; Registers used:
  2914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2920 ;;      Params:         0       0       0       0       0       0       0
  2921 ;;      Locals:         0       0       0       0       0       0       0
  2922 ;;      Temps:          0       0       0       0       0       0       0
  2923 ;;      Totals:         0       0       0       0       0       0       0
  2924 ;;Total ram usage:        0 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; Hardware stack levels required when called:    8
  2927 ;; This function calls:
  2928 ;;		_dispatcher
  2929 ;; This function is called by:
  2930 ;;		_task_0
  2931 ;;		_task_1
  2932 ;;		_task_2
  2933 ;; This function uses a reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text19
  2937  000FFA                     __ptext19:
  2938                           	opt callstack 0
  2939  000FFA                     _lunos_delayTask:
  2940                           	opt callstack 18
  2941                           
  2942                           ;kernel.c: 39:   INTCONbits.GIE = 0;
  2943                           
  2944                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2945                           ;incstack = 0
  2946  000FFA  9EF2               	bcf	4082,7,c	;volatile
  2947                           
  2948                           ;kernel.c: 41:   ready_queue.tasks[ready_queue.task_running].task_delay_time = time;
  2949                           ;stkvar	_time @ sp[(0)+-2]
  2950  000FFC  50E1               	movf	fsr1l,w,c
  2951  000FFE  0FFE               	addlw	-2
  2952  001000  6ED9               	movwf	fsr2l,c
  2953  001002  50E2               	movf	fsr1h,w,c
  2954  001004  6EDA               	movwf	fsr2h,c
  2955  001006  0EFF               	movlw	255
  2956  001008  22DA               	addwfc	fsr2h,f,c
  2957  00100A  EE03  F0FE         	lfsr	0,_ready_queue+542
  2958  00100E  CFEE F00B          	movff	postinc0,btemp+10
  2959  001012  CFED F00C          	movff	postdec0,btemp+11
  2960  001016  0E6C               	movlw	108
  2961  001018  020B               	mulwf	btemp+10,c
  2962  00101A  CFF3 F009          	movff	prodl,btemp+8
  2963  00101E  CFF4 F00A          	movff	prodh,btemp+9
  2964  001022  020C               	mulwf	btemp+11,c
  2965  001024  50F3               	movf	prodl,w,c
  2966  001026  260A               	addwf	btemp+9,f,c
  2967  001028  0E4A               	movlw	low (_ready_queue+106)
  2968  00102A  2409               	addwf	btemp+8,w,c
  2969  00102C  6EE9               	movwf	fsr0l,c
  2970  00102E  0E02               	movlw	high (_ready_queue+106)
  2971  001030  200A               	addwfc	btemp+9,w,c
  2972  001032  6EEA               	movwf	fsr0h,c
  2973  001034  CFDE FFEE          	movff	postinc2,postinc0
  2974  001038  CFDD FFED          	movff	postdec2,postdec0
  2975                           
  2976                           ;kernel.c: 42:   dispatcher(WAITING);
  2977  00103C  0E02               	movlw	2
  2978  00103E  6EE6               	movwf	postinc1,c
  2979  001040  EC0A  F000         	call	_dispatcher	;wreg free
  2980                           
  2981                           ;kernel.c: 44:   INTCONbits.GIE = 1;
  2982  001044  8EF2               	bsf	4082,7,c	;volatile
  2983                           
  2984                           ; _lunos_delayTask: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  2985  001046  52E5               	movf	postdec1,f,c
  2986  001048  52E5               	movf	postdec1,f,c
  2987  00104A  0012               	return		;funcret
  2988  00104C                     __end_of_lunos_delayTask:
  2989                           	opt callstack 0
  2990                           
  2991 ;; *************** function _task_1 *****************
  2992 ;; Defined at:
  2993 ;;		line 50 in file "tasks.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;		None
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;  dado            2  [STACK] unsigned int 
  2998 ;; Return value:  Size  Location     Type
  2999 ;;                  1  [STACK] void 
  3000 ;; Registers used:
  3001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3007 ;;      Params:         0       0       0       0       0       0       0
  3008 ;;      Locals:         0       0       0       0       0       0       0
  3009 ;;      Temps:          0       0       0       0       0       0       0
  3010 ;;      Totals:         0       0       0       0       0       0       0
  3011 ;;Total ram usage:        0 bytes
  3012 ;; Hardware stack levels used:    1
  3013 ;; Hardware stack levels required when called:    9
  3014 ;; This function calls:
  3015 ;;		_lunos_delayTask
  3016 ;;		_pipe_read
  3017 ;;		_pipe_write
  3018 ;; This function is called by:
  3019 ;;		_main
  3020 ;; This function uses a reentrant model
  3021 ;;
  3022                           
  3023                           	psect	text20
  3024  000F36                     __ptext20:
  3025                           	opt callstack 0
  3026  000F36                     _task_1:
  3027                           	opt callstack 0
  3028                           
  3029                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3030  000F36  52E6               	movf	postinc1,f,c
  3031  000F38  52E6               	movf	postinc1,f,c
  3032  000F3A                     l249:
  3033                           
  3034                           ;tasks.c: 53:         pipe_read(&p, &dado);
  3035                           ;stkvar	_dado @ sp[(-2)+0]
  3036  000F3A  0EFE               	movlw	254
  3037  000F3C  24E1               	addwf	fsr1l,w,c
  3038  000F3E  6E01               	movwf	btemp,c
  3039  000F40  0EFF               	movlw	255
  3040  000F42  20E2               	addwfc	fsr1h,w,c
  3041  000F44  6E02               	movwf	btemp+1,c
  3042  000F46  C001  FFE6         	movff	btemp,postinc1
  3043  000F4A  C002  FFE6         	movff	btemp+1,postinc1
  3044  000F4E  0E33               	movlw	low _p
  3045  000F50  6EE6               	movwf	postinc1,c
  3046  000F52  0E00               	movlw	high _p
  3047  000F54  6EE6               	movwf	postinc1,c
  3048  000F56  ECDC  F005         	call	_pipe_read	;wreg free
  3049                           
  3050                           ;tasks.c: 54:         if (dado == 1) {
  3051                           ;stkvar	_dado @ sp[(-2)+0]
  3052  000F5A  0EFE               	movlw	-2
  3053  000F5C  04E3               	decf	plusw1,w,c
  3054  000F5E  E11B               	bnz	l1328
  3055  000F60  0EFF               	movlw	-1
  3056  000F62  50E3               	movf	plusw1,w,c
  3057  000F64  A4D8               	btfss	status,2,c
  3058  000F66  D017               	goto	l1328
  3059                           
  3060                           ;tasks.c: 55:             PORTBbits.RB4 = ~PORTBbits.RB4;
  3061  000F68  A881               	btfss	3969,4,c	;volatile
  3062  000F6A  D002               	goto	u31_20
  3063  000F6C  0E01               	movlw	1
  3064  000F6E  D001               	goto	u31_26
  3065  000F70                     u31_20:
  3066  000F70  0E00               	movlw	0
  3067  000F72                     u31_26:
  3068  000F72  0AFF               	xorlw	255
  3069  000F74  6E0C               	movwf	btemp+11,c
  3070  000F76  3A0C               	swapf	btemp+11,f,c
  3071  000F78  5081               	movf	3969,w,c	;volatile
  3072  000F7A  180C               	xorwf	btemp+11,w,c
  3073  000F7C  0BEF               	andlw	-17
  3074  000F7E  180C               	xorwf	btemp+11,w,c
  3075  000F80  6E81               	movwf	3969,c	;volatile
  3076                           
  3077                           ;tasks.c: 56:             pipe_write(&p, 0);
  3078  000F82  0E00               	movlw	0
  3079  000F84  6EE6               	movwf	postinc1,c
  3080  000F86  0E00               	movlw	0
  3081  000F88  6EE6               	movwf	postinc1,c
  3082  000F8A  0E33               	movlw	low _p
  3083  000F8C  6EE6               	movwf	postinc1,c
  3084  000F8E  0E00               	movlw	high _p
  3085  000F90  6EE6               	movwf	postinc1,c
  3086  000F92  ECE3  F004         	call	_pipe_write	;wreg free
  3087  000F96                     l1328:
  3088                           
  3089                           ;tasks.c: 58:         lunos_delayTask(3000);
  3090  000F96  0EB8               	movlw	184
  3091  000F98  6EE6               	movwf	postinc1,c
  3092  000F9A  0E0B               	movlw	11
  3093  000F9C  6EE6               	movwf	postinc1,c
  3094  000F9E  ECFD  F007         	call	_lunos_delayTask	;wreg free
  3095                           
  3096                           ;tasks.c: 59:     }
  3097  000FA2  D7CB               	goto	l249
  3098  000FA4                     __end_of_task_1:
  3099                           	opt callstack 0
  3100                           
  3101 ;; *************** function _pipe_read *****************
  3102 ;; Defined at:
  3103 ;;		line 38 in file "pipe.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;  p               2  [STACK] PTR struct pipe
  3106 ;;		 -> p(12), 
  3107 ;;  data            2  [STACK] PTR unsigned int 
  3108 ;;		 -> dado(2), 
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;		None
  3111 ;; Return value:  Size  Location     Type
  3112 ;;                  1  [STACK] void 
  3113 ;; Registers used:
  3114 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3120 ;;      Params:         0       0       0       0       0       0       0
  3121 ;;      Locals:         0       0       0       0       0       0       0
  3122 ;;      Temps:          0       0       0       0       0       0       0
  3123 ;;      Totals:         0       0       0       0       0       0       0
  3124 ;;Total ram usage:        0 bytes
  3125 ;; Hardware stack levels used:    1
  3126 ;; Hardware stack levels required when called:    5
  3127 ;; This function calls:
  3128 ;;		Nothing
  3129 ;; This function is called by:
  3130 ;;		_task_1
  3131 ;; This function uses a reentrant model
  3132 ;;
  3133                           
  3134                           	psect	text21
  3135  000BB8                     __ptext21:
  3136                           	opt callstack 0
  3137  000BB8                     _pipe_read:
  3138                           	opt callstack 21
  3139                           
  3140                           ;pipe.c: 39:   INTCONbits.GIE = 0;
  3141                           
  3142                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3143                           ;incstack = 0
  3144  000BB8  9EF2               	bcf	4082,7,c	;volatile
  3145                           
  3146                           ;pipe.c: 43:   if (p->p_size > 0) {
  3147                           ;stkvar	_p @ sp[(0)+-2]
  3148  000BBA  0EFE               	movlw	-2
  3149  000BBC  CFE3 F00B          	movff	plusw1,btemp+10
  3150  000BC0  0EFF               	movlw	-1
  3151  000BC2  CFE3 F00C          	movff	plusw1,btemp+11
  3152  000BC6  0E08               	movlw	8
  3153  000BC8  240B               	addwf	btemp+10,w,c
  3154  000BCA  6ED9               	movwf	fsr2l,c
  3155  000BCC  0E00               	movlw	0
  3156  000BCE  200C               	addwfc	btemp+11,w,c
  3157  000BD0  6EDA               	movwf	fsr2h,c
  3158  000BD2  50DE               	movf	postinc2,w,c
  3159  000BD4  10DE               	iorwf	postinc2,w,c
  3160  000BD6  B4D8               	btfsc	status,2,c
  3161  000BD8  D062               	goto	l1280
  3162                           
  3163                           ;pipe.c: 44:     *data = p->pipe_data[p->index_read];
  3164                           ;stkvar	_p @ sp[(0)+-2]
  3165  000BDA  0EFE               	movlw	-2
  3166  000BDC  CFE3 F00B          	movff	plusw1,btemp+10
  3167  000BE0  0EFF               	movlw	-1
  3168  000BE2  CFE3 F00C          	movff	plusw1,btemp+11
  3169  000BE6  0E06               	movlw	6
  3170  000BE8  240B               	addwf	btemp+10,w,c
  3171  000BEA  6ED9               	movwf	fsr2l,c
  3172  000BEC  0E00               	movlw	0
  3173  000BEE  200C               	addwfc	btemp+11,w,c
  3174  000BF0  6EDA               	movwf	fsr2h,c
  3175  000BF2  CFDE F00B          	movff	postinc2,btemp+10
  3176  000BF6  CFDD F00C          	movff	postdec2,btemp+11
  3177  000BFA  90D8               	bcf	status,0,c
  3178  000BFC  340B               	rlcf	btemp+10,w,c
  3179  000BFE  6E09               	movwf	btemp+8,c
  3180  000C00  340C               	rlcf	btemp+11,w,c
  3181  000C02  6E0A               	movwf	btemp+9,c
  3182                           
  3183                           ;stkvar	_p @ sp[(0)+-2]
  3184  000C04  0EFE               	movlw	-2
  3185  000C06  CFE3 F00B          	movff	plusw1,btemp+10
  3186  000C0A  0EFF               	movlw	-1
  3187  000C0C  CFE3 F00C          	movff	plusw1,btemp+11
  3188  000C10  5009               	movf	btemp+8,w,c
  3189  000C12  240B               	addwf	btemp+10,w,c
  3190  000C14  6ED9               	movwf	fsr2l,c
  3191  000C16  500A               	movf	btemp+9,w,c
  3192  000C18  200C               	addwfc	btemp+11,w,c
  3193  000C1A  6EDA               	movwf	fsr2h,c
  3194                           
  3195                           ;stkvar	_data @ sp[(0)+-4]
  3196  000C1C  0EFC               	movlw	-4
  3197  000C1E  CFE3 FFE9          	movff	plusw1,fsr0l
  3198  000C22  0EFD               	movlw	-3
  3199  000C24  CFE3 FFEA          	movff	plusw1,fsr0h
  3200  000C28  CFDE FFEE          	movff	postinc2,postinc0
  3201  000C2C  CFDD FFED          	movff	postdec2,postdec0
  3202                           
  3203                           ;pipe.c: 45:     p->index_read = (p->index_read + 1) % 2;
  3204                           ;stkvar	_p @ sp[(0)+-2]
  3205  000C30  0EFE               	movlw	-2
  3206  000C32  CFE3 F00B          	movff	plusw1,btemp+10
  3207  000C36  0EFF               	movlw	-1
  3208  000C38  CFE3 F00C          	movff	plusw1,btemp+11
  3209  000C3C  0E06               	movlw	6
  3210  000C3E  240B               	addwf	btemp+10,w,c
  3211  000C40  6ED9               	movwf	fsr2l,c
  3212  000C42  0E00               	movlw	0
  3213  000C44  200C               	addwfc	btemp+11,w,c
  3214  000C46  6EDA               	movwf	fsr2h,c
  3215  000C48  CFDE F00B          	movff	postinc2,btemp+10
  3216  000C4C  CFDD F00C          	movff	postdec2,btemp+11
  3217  000C50  0E01               	movlw	1
  3218  000C52  260B               	addwf	btemp+10,f,c
  3219  000C54  0E00               	movlw	0
  3220  000C56  220C               	addwfc	btemp+11,f,c
  3221  000C58  0E01               	movlw	1
  3222  000C5A  160B               	andwf	btemp+10,f,c
  3223  000C5C  0E00               	movlw	0
  3224  000C5E  160C               	andwf	btemp+11,f,c
  3225                           
  3226                           ;stkvar	_p @ sp[(0)+-2]
  3227  000C60  0EFE               	movlw	-2
  3228  000C62  CFE3 F009          	movff	plusw1,btemp+8
  3229  000C66  0EFF               	movlw	-1
  3230  000C68  CFE3 F00A          	movff	plusw1,btemp+9
  3231  000C6C  0E06               	movlw	6
  3232  000C6E  2409               	addwf	btemp+8,w,c
  3233  000C70  6ED9               	movwf	fsr2l,c
  3234  000C72  0E00               	movlw	0
  3235  000C74  200A               	addwfc	btemp+9,w,c
  3236  000C76  6EDA               	movwf	fsr2h,c
  3237  000C78  C00B  FFDE         	movff	btemp+10,postinc2
  3238  000C7C  C00C  FFDD         	movff	btemp+11,postdec2
  3239                           
  3240                           ;pipe.c: 46:     p->p_size--;
  3241                           ;stkvar	_p @ sp[(0)+-2]
  3242  000C80  0EFE               	movlw	-2
  3243  000C82  CFE3 F00B          	movff	plusw1,btemp+10
  3244  000C86  0EFF               	movlw	-1
  3245  000C88  CFE3 F00C          	movff	plusw1,btemp+11
  3246  000C8C  0E08               	movlw	8
  3247  000C8E  240B               	addwf	btemp+10,w,c
  3248  000C90  6ED9               	movwf	fsr2l,c
  3249  000C92  0E00               	movlw	0
  3250  000C94  200C               	addwfc	btemp+11,w,c
  3251  000C96  6EDA               	movwf	fsr2h,c
  3252  000C98  06DE               	decf	postinc2,f,c
  3253  000C9A  0E00               	movlw	0
  3254  000C9C  5ADD               	subwfb	postdec2,f,c
  3255  000C9E                     l1280:
  3256                           
  3257                           ;pipe.c: 54:   INTCONbits.GIE = 1;
  3258  000C9E  8EF2               	bsf	4082,7,c	;volatile
  3259                           
  3260                           ; _pipe_read: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  3261  000CA0  52E5               	movf	postdec1,f,c
  3262  000CA2  52E5               	movf	postdec1,f,c
  3263  000CA4  52E5               	movf	postdec1,f,c
  3264  000CA6  52E5               	movf	postdec1,f,c
  3265  000CA8  0012               	return		;funcret
  3266  000CAA                     __end_of_pipe_read:
  3267                           	opt callstack 0
  3268                           
  3269 ;; *************** function _task_2 *****************
  3270 ;; Defined at:
  3271 ;;		line 62 in file "tasks.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;		None
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;		None
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  1  [STACK] void 
  3278 ;; Registers used:
  3279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3285 ;;      Params:         0       0       0       0       0       0       0
  3286 ;;      Locals:         0       0       0       0       0       0       0
  3287 ;;      Temps:          0       0       0       0       0       0       0
  3288 ;;      Totals:         0       0       0       0       0       0       0
  3289 ;;Total ram usage:        0 bytes
  3290 ;; Hardware stack levels used:    1
  3291 ;; Hardware stack levels required when called:    9
  3292 ;; This function calls:
  3293 ;;		_lunos_delayTask
  3294 ;; This function is called by:
  3295 ;;		_main
  3296 ;; This function uses a reentrant model
  3297 ;;
  3298                           
  3299                           	psect	text22
  3300  0010F8                     __ptext22:
  3301                           	opt callstack 0
  3302  0010F8                     _task_2:
  3303                           	opt callstack 18
  3304                           
  3305                           ;tasks.c: 64:         PORTBbits.RB5 = ~PORTBbits.RB5;
  3306                           
  3307                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3308                           ;incstack = 0
  3309                           ;tasks.c: 63:     for (;;) {
  3310  0010F8  AA81               	btfss	3969,5,c	;volatile
  3311  0010FA  D002               	goto	u32_20
  3312  0010FC  0E01               	movlw	1
  3313  0010FE  D001               	goto	u32_26
  3314  001100                     u32_20:
  3315  001100  0E00               	movlw	0
  3316  001102                     u32_26:
  3317  001102  0AFF               	xorlw	255
  3318  001104  6E0C               	movwf	btemp+11,c
  3319  001106  3A0C               	swapf	btemp+11,f,c
  3320  001108  460C               	rlncf	btemp+11,f,c
  3321  00110A  5081               	movf	3969,w,c	;volatile
  3322  00110C  180C               	xorwf	btemp+11,w,c
  3323  00110E  0BDF               	andlw	-33
  3324  001110  180C               	xorwf	btemp+11,w,c
  3325  001112  6E81               	movwf	3969,c	;volatile
  3326                           
  3327                           ;tasks.c: 65:         lunos_delayTask(1000);
  3328  001114  0EE8               	movlw	232
  3329  001116  6EE6               	movwf	postinc1,c
  3330  001118  0E03               	movlw	3
  3331  00111A  6EE6               	movwf	postinc1,c
  3332  00111C  ECFD  F007         	call	_lunos_delayTask	;wreg free
  3333                           
  3334                           ;tasks.c: 66:     }
  3335  001120  D7EB               	goto	_task_2
  3336  001122                     __end_of_task_2:
  3337                           	opt callstack 0
  3338                           
  3339 ;; *************** function _ISR_timer0 *****************
  3340 ;; Defined at:
  3341 ;;		line 56 in file "int0_test.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;		None
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;		None
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  1    wreg      void 
  3348 ;; Registers used:
  3349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3355 ;;      Params:         0       0       0       0       0       0       0
  3356 ;;      Locals:         0       0       0       0       0       0       0
  3357 ;;      Temps:         17       0       0       0       0       0       0
  3358 ;;      Totals:        17       0       0       0       0       0       0
  3359 ;;Total ram usage:       17 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; Hardware stack levels required when called:    4
  3362 ;; This function calls:
  3363 ;;		_delay_decrement
  3364 ;; This function is called by:
  3365 ;;		Interrupt level 2
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           	psect	intcode
  3370  000008                     __pintcode:
  3371                           	opt callstack 0
  3372  000008                     _ISR_timer0:
  3373                           	opt callstack 18
  3374                           
  3375                           ;incstack = 0
  3376  000008  EDBC  F006         	call	int_func,f	;refresh shadow registers
  3377                           
  3378                           	psect	intcode_body
  3379  000D78                     __pintcode_body:
  3380                           	opt callstack 18
  3381  000D78                     int_func:
  3382                           	opt callstack 18
  3383  000D78  0006               	pop		; remove dummy address from shadow register refresh
  3384  000D7A  CFE9 F040          	movff	fsr0l,??_ISR_timer0+1
  3385  000D7E  CFEA F041          	movff	fsr0h,??_ISR_timer0+2
  3386  000D82  CFE1 F042          	movff	fsr1l,??_ISR_timer0+3
  3387  000D86  CFE2 F043          	movff	fsr1h,??_ISR_timer0+4
  3388  000D8A  CFD9 F044          	movff	fsr2l,??_ISR_timer0+5
  3389  000D8E  CFDA F045          	movff	fsr2h,??_ISR_timer0+6
  3390  000D92  CFF3 F046          	movff	prodl,??_ISR_timer0+7
  3391  000D96  CFF4 F047          	movff	prodh,??_ISR_timer0+8
  3392  000D9A  C001  F048         	movff	btemp,??_ISR_timer0+9
  3393  000D9E  C002  F049         	movff	btemp+1,??_ISR_timer0+10
  3394  000DA2  C007  F04A         	movff	btemp+6,??_ISR_timer0+11
  3395  000DA6  C008  F04B         	movff	btemp+7,??_ISR_timer0+12
  3396  000DAA  C009  F04C         	movff	btemp+8,??_ISR_timer0+13
  3397  000DAE  C00A  F04D         	movff	btemp+9,??_ISR_timer0+14
  3398  000DB2  C00B  F04E         	movff	btemp+10,??_ISR_timer0+15
  3399  000DB6  C00C  F04F         	movff	btemp+11,??_ISR_timer0+16
  3400  000DBA  EE10  F0F6         	lfsr	1,___inthi_sp
  3401                           
  3402                           ;int0_test.c: 57:   INTCONbits.GIE = 0;
  3403  000DBE  9EF2               	bcf	4082,7,c	;volatile
  3404                           
  3405                           ;int0_test.c: 59:   if (INTCONbits.TMR0IF) {
  3406  000DC0  A4F2               	btfss	4082,2,c	;volatile
  3407  000DC2  D011               	goto	i2l1292
  3408                           
  3409                           ;int0_test.c: 60:     INTCONbits.TMR0IF = 0;
  3410  000DC4  94F2               	bcf	4082,2,c	;volatile
  3411                           
  3412                           ;int0_test.c: 61:     TMR0L = 252;
  3413  000DC6  0EFC               	movlw	252
  3414  000DC8  6ED6               	movwf	4054,c	;volatile
  3415                           
  3416                           ;int0_test.c: 62:     PORTDbits.RD0 = ~PORTDbits.RD0;
  3417  000DCA  A083               	btfss	3971,0,c	;volatile
  3418  000DCC  D002               	goto	i2u28_40
  3419  000DCE  0E01               	movlw	1
  3420  000DD0  D001               	goto	i2u28_46
  3421  000DD2                     i2u28_40:
  3422  000DD2  0E00               	movlw	0
  3423  000DD4                     i2u28_46:
  3424  000DD4  0AFF               	xorlw	255
  3425  000DD6  6E3F               	movwf	??_ISR_timer0& (0+255),c
  3426  000DD8  5083               	movf	3971,w,c	;volatile
  3427  000DDA  183F               	xorwf	??_ISR_timer0,w,c
  3428  000DDC  0BFE               	andlw	-2
  3429  000DDE  183F               	xorwf	??_ISR_timer0,w,c
  3430  000DE0  6E83               	movwf	3971,c	;volatile
  3431                           
  3432                           ;int0_test.c: 63:     delay_decrement();
  3433  000DE2  EC57  F004         	call	_delay_decrement	;wreg free
  3434  000DE6                     i2l1292:
  3435                           
  3436                           ;int0_test.c: 75:   INTCONbits.GIE = 1;
  3437  000DE6  8EF2               	bsf	4082,7,c	;volatile
  3438  000DE8  C04F  F00C         	movff	??_ISR_timer0+16,btemp+11
  3439  000DEC  C04E  F00B         	movff	??_ISR_timer0+15,btemp+10
  3440  000DF0  C04D  F00A         	movff	??_ISR_timer0+14,btemp+9
  3441  000DF4  C04C  F009         	movff	??_ISR_timer0+13,btemp+8
  3442  000DF8  C04B  F008         	movff	??_ISR_timer0+12,btemp+7
  3443  000DFC  C04A  F007         	movff	??_ISR_timer0+11,btemp+6
  3444  000E00  C049  F002         	movff	??_ISR_timer0+10,btemp+1
  3445  000E04  C048  F001         	movff	??_ISR_timer0+9,btemp
  3446  000E08  C047  FFF4         	movff	??_ISR_timer0+8,prodh
  3447  000E0C  C046  FFF3         	movff	??_ISR_timer0+7,prodl
  3448  000E10  C045  FFDA         	movff	??_ISR_timer0+6,fsr2h
  3449  000E14  C044  FFD9         	movff	??_ISR_timer0+5,fsr2l
  3450  000E18  C043  FFE2         	movff	??_ISR_timer0+4,fsr1h
  3451  000E1C  C042  FFE1         	movff	??_ISR_timer0+3,fsr1l
  3452  000E20  C041  FFEA         	movff	??_ISR_timer0+2,fsr0h
  3453  000E24  C040  FFE9         	movff	??_ISR_timer0+1,fsr0l
  3454  000E28  0011               	retfie		f
  3455  000E2A                     __end_of_ISR_timer0:
  3456                           	opt callstack 0
  3457                           
  3458 ;; *************** function _delay_decrement *****************
  3459 ;; Defined at:
  3460 ;;		line 108 in file "kernel.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;		None
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;  i               2  [STACK] int 
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1  [STACK] void 
  3467 ;; Registers used:
  3468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3474 ;;      Params:         0       0       0       0       0       0       0
  3475 ;;      Locals:         0       0       0       0       0       0       0
  3476 ;;      Temps:          0       0       0       0       0       0       0
  3477 ;;      Totals:         0       0       0       0       0       0       0
  3478 ;;Total ram usage:        0 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; Hardware stack levels required when called:    3
  3481 ;; This function calls:
  3482 ;;		_dispatcher
  3483 ;; This function is called by:
  3484 ;;		_ISR_timer0
  3485 ;; This function uses a reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text24
  3489  0008AE                     __ptext24:
  3490                           	opt callstack 0
  3491  0008AE                     _delay_decrement:
  3492                           	opt callstack 0
  3493                           
  3494                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3495  0008AE  52E6               	movf	postinc1,f,c
  3496  0008B0  52E6               	movf	postinc1,f,c
  3497                           
  3498                           ;kernel.c: 109:   int i;;kernel.c: 111:   for (i = 0; i < ready_queue.tasks_installed; i
      +                          ++) {
  3499                           ;stkvar	_i @ sp[(-2)+0]
  3500                           
  3501                           ;incstack = 0
  3502  0008B2  0EFE               	movlw	-2
  3503  0008B4  6AE3               	clrf	plusw1,c
  3504  0008B6  0EFF               	movlw	-1
  3505  0008B8  6AE3               	clrf	plusw1,c
  3506  0008BA  D074               	goto	l1230
  3507  0008BC                     l1218:
  3508                           
  3509                           ;kernel.c: 112:     if (ready_queue.tasks[i].task_state == WAITING) {
  3510                           ;stkvar	_i @ sp[(-2)+0]
  3511  0008BC  0EFE               	movlw	-2
  3512  0008BE  CFE3 F00B          	movff	plusw1,btemp+10
  3513  0008C2  0EFF               	movlw	-1
  3514  0008C4  CFE3 F00C          	movff	plusw1,btemp+11
  3515  0008C8  0E6C               	movlw	108
  3516  0008CA  020B               	mulwf	btemp+10,c
  3517  0008CC  CFF3 F009          	movff	prodl,btemp+8
  3518  0008D0  CFF4 F00A          	movff	prodh,btemp+9
  3519  0008D4  020C               	mulwf	btemp+11,c
  3520  0008D6  50F3               	movf	prodl,w,c
  3521  0008D8  260A               	addwf	btemp+9,f,c
  3522  0008DA  0EE8               	movlw	low (_ready_queue+8)
  3523  0008DC  2409               	addwf	btemp+8,w,c
  3524  0008DE  6ED9               	movwf	fsr2l,c
  3525  0008E0  0E01               	movlw	high (_ready_queue+8)
  3526  0008E2  200A               	addwfc	btemp+9,w,c
  3527  0008E4  6EDA               	movwf	fsr2h,c
  3528  0008E6  0E02               	movlw	2
  3529  0008E8  18DE               	xorwf	postinc2,w,c
  3530  0008EA  A4D8               	btfss	status,2,c
  3531  0008EC  D04C               	goto	l1228
  3532                           
  3533                           ;kernel.c: 113:       ready_queue.tasks[i].task_delay_time--;
  3534                           ;stkvar	_i @ sp[(-2)+0]
  3535  0008EE  0EFE               	movlw	-2
  3536  0008F0  CFE3 F00B          	movff	plusw1,btemp+10
  3537  0008F4  0EFF               	movlw	-1
  3538  0008F6  CFE3 F00C          	movff	plusw1,btemp+11
  3539  0008FA  0E6C               	movlw	108
  3540  0008FC  020B               	mulwf	btemp+10,c
  3541  0008FE  CFF3 F009          	movff	prodl,btemp+8
  3542  000902  CFF4 F00A          	movff	prodh,btemp+9
  3543  000906  020C               	mulwf	btemp+11,c
  3544  000908  50F3               	movf	prodl,w,c
  3545  00090A  260A               	addwf	btemp+9,f,c
  3546  00090C  0E4A               	movlw	low (_ready_queue+106)
  3547  00090E  2409               	addwf	btemp+8,w,c
  3548  000910  6ED9               	movwf	fsr2l,c
  3549  000912  0E02               	movlw	high (_ready_queue+106)
  3550  000914  200A               	addwfc	btemp+9,w,c
  3551  000916  6EDA               	movwf	fsr2h,c
  3552  000918  06DE               	decf	postinc2,f,c
  3553  00091A  0E00               	movlw	0
  3554  00091C  5ADD               	subwfb	postdec2,f,c
  3555                           
  3556                           ;kernel.c: 114:       if (ready_queue.tasks[i].task_delay_time == 0) {
  3557                           ;stkvar	_i @ sp[(-2)+0]
  3558  00091E  0EFE               	movlw	-2
  3559  000920  CFE3 F00B          	movff	plusw1,btemp+10
  3560  000924  0EFF               	movlw	-1
  3561  000926  CFE3 F00C          	movff	plusw1,btemp+11
  3562  00092A  0E6C               	movlw	108
  3563  00092C  020B               	mulwf	btemp+10,c
  3564  00092E  CFF3 F009          	movff	prodl,btemp+8
  3565  000932  CFF4 F00A          	movff	prodh,btemp+9
  3566  000936  020C               	mulwf	btemp+11,c
  3567  000938  50F3               	movf	prodl,w,c
  3568  00093A  260A               	addwf	btemp+9,f,c
  3569  00093C  0E4A               	movlw	low (_ready_queue+106)
  3570  00093E  2409               	addwf	btemp+8,w,c
  3571  000940  6ED9               	movwf	fsr2l,c
  3572  000942  0E02               	movlw	high (_ready_queue+106)
  3573  000944  200A               	addwfc	btemp+9,w,c
  3574  000946  6EDA               	movwf	fsr2h,c
  3575  000948  50DE               	movf	postinc2,w,c
  3576  00094A  10DE               	iorwf	postinc2,w,c
  3577  00094C  A4D8               	btfss	status,2,c
  3578  00094E  D01B               	goto	l1228
  3579                           
  3580                           ;kernel.c: 115:         ready_queue.tasks[i].task_state = READY;
  3581                           ;stkvar	_i @ sp[(-2)+0]
  3582  000950  0EFE               	movlw	-2
  3583  000952  CFE3 F00B          	movff	plusw1,btemp+10
  3584  000956  0EFF               	movlw	-1
  3585  000958  CFE3 F00C          	movff	plusw1,btemp+11
  3586  00095C  0E6C               	movlw	108
  3587  00095E  020B               	mulwf	btemp+10,c
  3588  000960  CFF3 F009          	movff	prodl,btemp+8
  3589  000964  CFF4 F00A          	movff	prodh,btemp+9
  3590  000968  020C               	mulwf	btemp+11,c
  3591  00096A  50F3               	movf	prodl,w,c
  3592  00096C  260A               	addwf	btemp+9,f,c
  3593  00096E  0EE8               	movlw	low (_ready_queue+8)
  3594  000970  2409               	addwf	btemp+8,w,c
  3595  000972  6ED9               	movwf	fsr2l,c
  3596  000974  0E01               	movlw	high (_ready_queue+8)
  3597  000976  200A               	addwfc	btemp+9,w,c
  3598  000978  6EDA               	movwf	fsr2h,c
  3599  00097A  0E00               	movlw	0
  3600  00097C  6EDF               	movwf	indf2,c
  3601                           
  3602                           ;kernel.c: 117:         dispatcher(READY);
  3603  00097E  0E00               	movlw	0
  3604  000980  6EE6               	movwf	postinc1,c
  3605  000982  EC0A  F000         	call	_dispatcher	;wreg free
  3606  000986                     l1228:
  3607                           
  3608                           ;kernel.c: 121:   }
  3609                           ;stkvar	_i @ sp[(-2)+0]
  3610  000986  0EFE               	movlw	-2
  3611  000988  50E3               	movf	plusw1,w,c
  3612  00098A  0F01               	addlw	1
  3613  00098C  6E01               	movwf	btemp,c
  3614  00098E  0EFE               	movlw	-2
  3615  000990  C001  FFE3         	movff	btemp,plusw1
  3616  000994  6A01               	clrf	btemp,c
  3617  000996  0EFF               	movlw	-1
  3618  000998  50E3               	movf	plusw1,w,c
  3619  00099A  2001               	addwfc	btemp,w,c
  3620  00099C  6E01               	movwf	btemp,c
  3621  00099E  0EFF               	movlw	-1
  3622  0009A0  C001  FFE3         	movff	btemp,plusw1
  3623  0009A4                     l1230:
  3624  0009A4  EE23  F0FC         	lfsr	2,_ready_queue+540
  3625                           
  3626                           ;stkvar	_i @ sp[(-2)+0]
  3627  0009A8  0EFE               	movlw	-2
  3628  0009AA  CFE3 F001          	movff	plusw1,btemp
  3629  0009AE  50DE               	movf	postinc2,w,c
  3630  0009B0  5C01               	subwf	btemp,w,c
  3631  0009B2  0EFF               	movlw	-1
  3632  0009B4  CFE3 F001          	movff	plusw1,btemp
  3633  0009B8  50DE               	movf	postinc2,w,c
  3634  0009BA  5801               	subwfb	btemp,w,c
  3635  0009BC  A0D8               	btfss	status,0,c
  3636  0009BE  D77E               	goto	l1218
  3637                           
  3638                           ; _delay_decrement: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  3639  0009C0  52E5               	movf	postdec1,f,c
  3640  0009C2  52E5               	movf	postdec1,f,c
  3641  0009C4  0012               	return		;funcret
  3642  0009C6                     __end_of_delay_decrement:
  3643                           	opt callstack 0
  3644  0000                     
  3645                           	psect	text25
  3646  000000                     __ptext25:
  3647                           	opt callstack 0
  3648                           
  3649                           	psect	rparam
  3650  0000                     
  3651                           	psect	temp
  3652  000001                     btemp:
  3653                           	opt callstack 0
  3654  000001                     	ds	32
  3655  0000                     wtemp0	set	btemp
  3656  0000                     wtemp1	set	btemp+2
  3657  0000                     wtemp2	set	btemp+4
  3658  0000                     wtemp3	set	btemp+6
  3659  0000                     wtemp4	set	btemp+8
  3660  0000                     wtemp5	set	btemp+10
  3661  0000                     wtemp8	set	btemp+1
  3662  0000                     ttemp0	set	btemp
  3663  0000                     ttemp1	set	btemp+3
  3664  0000                     ttemp2	set	btemp+6
  3665  0000                     ttemp3	set	btemp+9
  3666  0000                     ttemp5	set	btemp+1
  3667  0000                     ttemp6	set	btemp+4
  3668  0000                     ttemp7	set	btemp+8
  3669  0000                     ltemp0	set	btemp
  3670  0000                     ltemp1	set	btemp+4
  3671  0000                     ltemp2	set	btemp+8
  3672  0000                     lltemp0	set	btemp
  3673  0000                     lltemp1	set	btemp+8
  3674  0000                     lltemp2	set	btemp+16
  3675  0000                     lltemp3	set	btemp+24
  3676                           tosu	equ	0xFFF
  3677                           tosh	equ	0xFFE
  3678                           tosl	equ	0xFFD
  3679                           stkptr	equ	0xFFC
  3680                           pclatu	equ	0xFFB
  3681                           pclath	equ	0xFFA
  3682                           pcl	equ	0xFF9
  3683                           tblptru	equ	0xFF8
  3684                           tblptrh	equ	0xFF7
  3685                           tblptrl	equ	0xFF6
  3686                           tablat	equ	0xFF5
  3687                           prodh	equ	0xFF4
  3688                           prodl	equ	0xFF3
  3689                           indf0	equ	0xFEF
  3690                           postinc0	equ	0xFEE
  3691                           postdec0	equ	0xFED
  3692                           preinc0	equ	0xFEC
  3693                           plusw0	equ	0xFEB
  3694                           fsr0h	equ	0xFEA
  3695                           fsr0l	equ	0xFE9
  3696                           wreg	equ	0xFE8
  3697                           indf1	equ	0xFE7
  3698                           postinc1	equ	0xFE6
  3699                           postdec1	equ	0xFE5
  3700                           preinc1	equ	0xFE4
  3701                           plusw1	equ	0xFE3
  3702                           fsr1h	equ	0xFE2
  3703                           fsr1l	equ	0xFE1
  3704                           bsr	equ	0xFE0
  3705                           indf2	equ	0xFDF
  3706                           postinc2	equ	0xFDE
  3707                           postdec2	equ	0xFDD
  3708                           preinc2	equ	0xFDC
  3709                           plusw2	equ	0xFDB
  3710                           fsr2h	equ	0xFDA
  3711                           fsr2l	equ	0xFD9
  3712                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1086
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     17      47
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    s	PTR struct semaphore size(2) Largest target is 14
		 -> s_pipe(COMRAM[14]), 

    pSegA	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pSegB	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pHeap	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    temp	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pHeap	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    mem	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    p.s	PTR struct semaphore size(2) Largest target is 0

    s	PTR struct semaphore size(2) Largest target is 0

    p.s	PTR struct semaphore size(2) Largest target is 0

    data	PTR unsigned int  size(2) Largest target is 2
		 -> dado(STACK[2]), 

    p.s	PTR struct semaphore size(2) Largest target is 0

    p	PTR struct pipe size(2) Largest target is 13
		 -> p(COMRAM[12]), 

    p.s	PTR struct semaphore size(2) Largest target is 0

    p	PTR struct pipe size(2) Largest target is 13
		 -> p(COMRAM[12]), 

    S503pipe$s	PTR struct semaphore size(2) Largest target is 0

    p.s	PTR struct semaphore size(2) Largest target is 0

    p	PTR struct pipe size(2) Largest target is 13
		 -> p(COMRAM[12]), 

    ready_queue.tasks.task_f	PTR FTN()void  size(2) Largest target is 1
		 -> task_2(), task_1(), task_0(), task_idle(), 

    f	PTR FTN()void  size(2) Largest target is 1
		 -> task_2(), task_1(), task_0(), task_idle(), 

    S316pcb$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> task_2(), task_1(), task_0(), task_idle(), 

    new_task.task_f	PTR FTN()void  size(2) Largest target is 1
		 -> task_2(), task_1(), task_0(), task_idle(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _task_idle in COMRAM

    None.

Critical Paths under _task_0 in COMRAM

    None.

Critical Paths under _task_1 in COMRAM

    None.

Critical Paths under _task_2 in COMRAM

    None.

Critical Paths under _task_0 in COMRAM

    None.

Critical Paths under _task_1 in COMRAM

    None.

Critical Paths under _task_2 in COMRAM

    None.

Critical Paths under _ISR_timer0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _task_idle in BANK0

    None.

Critical Paths under _task_0 in BANK0

    None.

Critical Paths under _task_1 in BANK0

    None.

Critical Paths under _task_2 in BANK0

    None.

Critical Paths under _task_0 in BANK0

    None.

Critical Paths under _task_1 in BANK0

    None.

Critical Paths under _task_2 in BANK0

    None.

Critical Paths under _ISR_timer0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _task_idle in BANK1

    None.

Critical Paths under _task_0 in BANK1

    None.

Critical Paths under _task_1 in BANK1

    None.

Critical Paths under _task_2 in BANK1

    None.

Critical Paths under _task_0 in BANK1

    None.

Critical Paths under _task_1 in BANK1

    None.

Critical Paths under _task_2 in BANK1

    None.

Critical Paths under _ISR_timer0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _task_idle in BANK2

    None.

Critical Paths under _task_0 in BANK2

    None.

Critical Paths under _task_1 in BANK2

    None.

Critical Paths under _task_2 in BANK2

    None.

Critical Paths under _task_0 in BANK2

    None.

Critical Paths under _task_1 in BANK2

    None.

Critical Paths under _task_2 in BANK2

    None.

Critical Paths under _ISR_timer0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _task_idle in BANK3

    None.

Critical Paths under _task_0 in BANK3

    None.

Critical Paths under _task_1 in BANK3

    None.

Critical Paths under _task_2 in BANK3

    None.

Critical Paths under _task_0 in BANK3

    None.

Critical Paths under _task_1 in BANK3

    None.

Critical Paths under _task_2 in BANK3

    None.

Critical Paths under _ISR_timer0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _task_idle in BANK4

    None.

Critical Paths under _task_0 in BANK4

    None.

Critical Paths under _task_1 in BANK4

    None.

Critical Paths under _task_2 in BANK4

    None.

Critical Paths under _task_0 in BANK4

    None.

Critical Paths under _task_1 in BANK4

    None.

Critical Paths under _task_2 in BANK4

    None.

Critical Paths under _ISR_timer0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _task_idle in BANK5

    None.

Critical Paths under _task_0 in BANK5

    None.

Critical Paths under _task_1 in BANK5

    None.

Critical Paths under _task_2 in BANK5

    None.

Critical Paths under _task_0 in BANK5

    None.

Critical Paths under _task_1 in BANK5

    None.

Critical Paths under _task_2 in BANK5

    None.

Critical Paths under _ISR_timer0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1215
                        _config_INT0
                      _config_timer0
                         _dispatcher
                   _lunos_createTask
                         _lunos_init
                     _seven_seg_init
                      _seven_seg_set
                          _user_conf
 ---------------------------------------------------------------------------------
 (1) _user_conf                                            0     0      0     720
                          _SRAMalloc
                        _pipe_create
                     _seven_seg_init
                      _seven_seg_set
 ---------------------------------------------------------------------------------
 (2) _seven_seg_set                                        4     0      4      60
 ---------------------------------------------------------------------------------
 (2) _seven_seg_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pipe_create                                          4     0      4      60
                           _sem_init
 ---------------------------------------------------------------------------------
 (3) _sem_init                                             4     0      4       0
 ---------------------------------------------------------------------------------
 (2) _SRAMalloc                                            7     6      1     600
                         __SRAMmerge
 ---------------------------------------------------------------------------------
 (3) __SRAMmerge                                           7     5      2     270
 ---------------------------------------------------------------------------------
 (1) _lunos_init                                           0     0      0     210
                       _SRAMInitHeap
                   _lunos_createTask
 ---------------------------------------------------------------------------------
 (2) _lunos_createTask                                   112   108      4     120
 ---------------------------------------------------------------------------------
 (2) _SRAMInitHeap                                         4     4      0      90
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1     105
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0      90
                           _priority
 ---------------------------------------------------------------------------------
 (13) _priority                                            4     4      0      90
 ---------------------------------------------------------------------------------
 (1) _config_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_INT0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _task_idle                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _task_0                                               0     0      0     225
                    _lunos_delayTask
                         _pipe_write
 ---------------------------------------------------------------------------------
 (5) _pipe_write                                           4     0      4     105
 ---------------------------------------------------------------------------------
 (5) _lunos_delayTask                                      2     0      2     120
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1     105
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0      90
                           _priority
 ---------------------------------------------------------------------------------
 (13) _priority                                            4     4      0      90
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _task_1                                               2     2      0     360
                    _lunos_delayTask
                          _pipe_read
                         _pipe_write
 ---------------------------------------------------------------------------------
 (5) _pipe_write                                           4     0      4     105
 ---------------------------------------------------------------------------------
 (5) _pipe_read                                            4     0      4     105
 ---------------------------------------------------------------------------------
 (5) _lunos_delayTask                                      2     0      2     120
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1     105
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0      90
                           _priority
 ---------------------------------------------------------------------------------
 (13) _priority                                            4     4      0      90
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _task_2                                               0     0      0     120
                    _lunos_delayTask
 ---------------------------------------------------------------------------------
 (5) _lunos_delayTask                                      2     0      2     120
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1     105
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0      90
                           _priority
 ---------------------------------------------------------------------------------
 (13) _priority                                            4     4      0      90
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _task_0                                               0     0      0     225
                    _lunos_delayTask
                         _pipe_write
 ---------------------------------------------------------------------------------
 (5) _pipe_write                                           4     0      4     105
 ---------------------------------------------------------------------------------
 (5) _lunos_delayTask                                      2     0      2     120
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1     105
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0      90
                           _priority
 ---------------------------------------------------------------------------------
 (13) _priority                                            4     4      0      90
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _task_1                                               2     2      0     360
                    _lunos_delayTask
                          _pipe_read
                         _pipe_write
 ---------------------------------------------------------------------------------
 (5) _pipe_write                                           4     0      4     105
 ---------------------------------------------------------------------------------
 (5) _pipe_read                                            4     0      4     105
 ---------------------------------------------------------------------------------
 (5) _lunos_delayTask                                      2     0      2     120
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1     105
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0      90
                           _priority
 ---------------------------------------------------------------------------------
 (13) _priority                                            4     4      0      90
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _task_2                                               0     0      0     120
                    _lunos_delayTask
 ---------------------------------------------------------------------------------
 (5) _lunos_delayTask                                      2     0      2     120
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1     105
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0      90
                           _priority
 ---------------------------------------------------------------------------------
 (13) _priority                                            4     4      0      90
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_timer0                                          17    17      0     180
                                              0 COMRAM    17    17      0
                    _delay_decrement
 ---------------------------------------------------------------------------------
 (10) _delay_decrement                                     2     2      0     180
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1     105
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0      90
                           _priority
 ---------------------------------------------------------------------------------
 (13) _priority                                            4     4      0      90
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_INT0
   _config_timer0
   _dispatcher
     _scheduler
       _priority
   _lunos_createTask
   _lunos_init
     _SRAMInitHeap
     _lunos_createTask
   _seven_seg_init
   _seven_seg_set
   _user_conf
     _SRAMalloc
       __SRAMmerge
     _pipe_create
       _sem_init
     _seven_seg_init
     _seven_seg_set

 _task_idle (ROOT)

 _task_0 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _priority
   _pipe_write

 _task_1 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _priority
   _pipe_read
   _pipe_write

 _task_2 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _priority

 _task_0 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _priority
   _pipe_write

 _task_1 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _priority
   _pipe_read
   _pipe_write

 _task_2 (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _priority

 _ISR_timer0 (ROOT)
   _delay_decrement
     _dispatcher
       _scheduler
         _priority

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     420      17       68.8%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     11      2F       1       49.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2F      15        0.0%
DATA                 0      0     44F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri May 31 00:16:45 2019

                        _p 0033   __end_of_lunos_createTask 0BB8                         l98 0376  
                       u40 06A4                         u91 0B9C                        l316 0FF0  
                      l157 0F34                        l249 0F3A                        l265 0634  
                      l996 07B6                        _BSR 000FE0                        u120 049A  
                      u200 054C                        u130 0CEE                        u160 04B4  
                      _TOS 000FFD                        _who 0023                        wreg 000FE8  
             __CFG_WDT$OFF 000000                       l1002 085E                       l1004 087C  
                     l1112 029C                       l1132 0D34                       l1124 0CDA  
                     l1060 0770                       l1028 06A8                       l1230 09A4  
                     l1118 0492                       l1218 08BC                       l1162 04BE  
                     l1228 0986                       l1092 00CE                       l1164 04D2  
                     l1148 0FC2                       l1182 0578                       l1280 0C9E  
                     l1328 0F96                       l1096 01E8                       l1192 05B2  
                     l1268 0AB4                       _TOSH 000FFE                       _TOSL 000FFD  
                     _WREG 000FE8                       _TOSU 000FFF                       _main 0EC8  
                     _size 0021                       fsr0h 000FEA                       fsr1h 000FE2  
                     fsr2h 000FDA                       fsr0l 000FE9                       indf2 000FDF  
                     fsr1l 000FE1                       fsr2l 000FD9                       btemp 0001  
                     prodh 000FF4                       prodl 000FF3                       start 000C  
             ___param_bank 000000                      u31_20 0F70                      u31_26 0F72  
                    u32_20 1100                      u32_26 1102                      _TMR0L 000FD6  
                    _PORTA 000F80                      u29_20 1068                      u29_26 106A  
                    _TRISA 000F92                      _TRISB 000F93                ?_ISR_timer0 003F  
               __SRAMmerge 063E         __size_of_SRAMalloc 019E                      ltemp0 0001  
                    ltemp1 0005                      ltemp2 0009                      plusw0 000FEB  
                    plusw1 000FE3                      plusw2 000FDB                      ttemp0 0001  
                    ttemp1 0004                      ttemp2 0007                      ttemp3 000A  
                    ttemp5 0002                      ttemp6 0005                      ttemp7 0009  
                    status 000FD8                      wtemp0 0001                      wtemp1 0003  
                    wtemp2 0005                      wtemp3 0007                      wtemp4 0009  
                    wtemp5 000B                      wtemp8 0002   __size_of_delay_decrement 0118  
          __initialization 1122               __end_of_main 0F36              __activetblptr 000000  
                   i2l1292 0DE6                     _STATUS 000FD8                     _STKPTR 000FFC  
     __size_of_config_INT0 0010        __size_of_ISR_timer0 0E22          __end_of_SRAMalloc 063E  
                   clear_0 112A                     clear_1 113C                     _s_pipe 0025  
                   _task_0 104C                     _task_1 0F36                     _task_2 10F8  
         __end_of_sem_init 1178                     lltemp0 0001                     lltemp1 0009  
                   lltemp2 0011                     lltemp3 0019           __end_of_priority 08AE  
               __accesstop 0080    __end_of__initialization 1142            __CFG_PBADEN$OFF 000000  
            ___rparam_used 000001             __pcstackCOMRAM 003F                 ___inthi_sp 00F6  
            __uDynamicHeap 0400         __size_of_scheduler 0006        __size_of__SRAMmerge 0152  
       __size_of_pipe_read 00F2      __end_of_seven_seg_set 0FFA         __size_of_task_idle 0004  
             ??_ISR_timer0 003F                    i2u28_40 0DD2                    i2u28_46 0DD4  
               _dispatcher 0014            _lunos_delayTask 0FFA       __size_of_pipe_create 009E  
       __size_of_user_conf 003A                    __Hparam 0000                    __Lparam 0000  
       __end_of_ISR_timer0 0E2A                    __pcinit 1122                    __ramtop 0600  
          __size_of_task_0 0040            __size_of_task_1 006E            __size_of_task_2 002A  
                  __ptext0 0EC8                    __ptext1 108C                    __ptext2 0FA4  
                  __ptext3 1178                    __ptext4 0E2A                    __ptext5 116A  
                  __ptext6 04A0                    __ptext7 063E                    __ptext8 10C6  
                  __ptext9 0AC0                  _T0CONbits 000FD5          __end_of_scheduler 1186  
  __size_of_seven_seg_init 0008             __pintcode_body 0D78       end_of_initialization 1142  
        __end_of_pipe_read 0CAA          __end_of_task_idle 118A                    int_func 0D78  
               _pipe_write 09C6      __end_of_config_timer0 115A                    postdec0 000FED  
                  postdec1 000FE5                    postdec2 000FDD                    postinc0 000FEE  
                  postinc1 000FE6                    postinc2 000FDE                 _lunos_init 10C6  
        __end_of_user_conf 10C6                  _PORTBbits 000F81                  _PORTDbits 000F83  
  __end_of_lunos_delayTask 104C                  _SRAMalloc 04A0                  _TRISDbits 000F95  
          _delay_decrement 08AE         __end_of__SRAMmerge 0790             __end_of_task_0 108C  
           __end_of_task_1 0FA4             __end_of_task_2 1122        start_initialization 1122  
__size_of_lunos_createTask 00F8        __end_of_config_INT0 116A        __size_of_dispatcher 048C  
              __pbssBIGRAM 01E0                __pbssCOMRAM 0021             _seven_seg_init 1178  
  __end_of_delay_decrement 09C6       __end_of_SRAMInitHeap 0D78                  __pintcode 0008  
        __size_of_sem_init 000E          __size_of_priority 011E        __size_of_pipe_write 00FA  
   __end_of_seven_seg_init 1180        __size_of_lunos_init 0032                  _scheduler 1180  
   __size_of_seven_seg_set 0056                _config_INT0 115A                  _pipe_read 0BB8  
                _task_idle 1186                  _user_conf 108C           _lunos_createTask 0AC0  
              _INTCON2bits 000FF1        __end_of_pipe_create 0EC8                   __Hrparam 0000  
                 __Lrparam 0000         __end_of_dispatcher 04A0              _seven_seg_set 0FA4  
   __size_of_config_timer0 0012      __size_of_SRAMInitHeap 00CE                   __ptext10 0CAA  
                 __ptext11 0014                   __ptext20 0F36                   __ptext12 1180  
                 __ptext21 0BB8                   __ptext13 0790                   __ptext22 10F8  
                 __ptext14 1148                   __ptext15 115A                   __ptext24 08AE  
                 __ptext16 1186                   __ptext25 0000                   __ptext17 104C  
                 __ptext18 09C6                   __ptext19 0FFA              __size_of_main 006E  
              _ready_queue 01E0                   _sem_init 116A                   _priority 0790  
             _SRAMInitHeap 0CAA                 _INTCONbits 000FF2         __end_of_pipe_write 0AC0  
              _pipe_create 0E2A                   intlevel1 0000                   intlevel2 0000  
       __end_of_lunos_init 10F8              _config_timer0 1148                 _ISR_timer0 0008  
 __size_of_lunos_delayTask 0052  
